[{"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\index.js":"1","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\TestGame.tsx":"2","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\HintBlock.tsx":"3","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\AppInput.tsx":"4","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\theme.tsx":"5","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\AccountModal.tsx":"6","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\AppButton.tsx":"7","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\ConnectButton.tsx":"8","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\AppValue.tsx":"9","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\utils\\StringUtils.tsx":"10","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\utils\\CopyToClipboard.tsx":"11","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\table\\AppTable.tsx":"12","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\table\\AppTableRow.tsx":"13","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\table\\AppTableCol.tsx":"14","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\table\\AppTableHeaderCol.tsx":"15","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\repository\\entities\\Currency.tsx":"16","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\servises\\network\\ChainType.tsx":"17","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\Identicon.tsx":"18"},{"size":395,"mtime":1679923012801,"results":"19","hashOfConfig":"20"},{"size":8816,"mtime":1679923012775,"results":"21","hashOfConfig":"20"},{"size":332,"mtime":1678188906531,"results":"22","hashOfConfig":"20"},{"size":501,"mtime":1678614457851,"results":"23","hashOfConfig":"20"},{"size":687,"mtime":1678109210907,"results":"24","hashOfConfig":"20"},{"size":4635,"mtime":1679923012791,"results":"25","hashOfConfig":"20"},{"size":754,"mtime":1678110035296,"results":"26","hashOfConfig":"20"},{"size":1976,"mtime":1679923012800,"results":"27","hashOfConfig":"20"},{"size":174,"mtime":1679317003996,"results":"28","hashOfConfig":"20"},{"size":140,"mtime":1678705887589,"results":"29","hashOfConfig":"20"},{"size":130,"mtime":1678706079083,"results":"30","hashOfConfig":"20"},{"size":323,"mtime":1678109385978,"results":"31","hashOfConfig":"20"},{"size":237,"mtime":1678109345282,"results":"32","hashOfConfig":"20"},{"size":144,"mtime":1678641061910,"results":"33","hashOfConfig":"20"},{"size":160,"mtime":1678108993730,"results":"34","hashOfConfig":"20"},{"size":1136,"mtime":1679417977867,"results":"35","hashOfConfig":"20"},{"size":205,"mtime":1678454397208,"results":"36","hashOfConfig":"20"},{"size":674,"mtime":1679843955173,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13ytckt",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\index.js",[],"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\TestGame.tsx",["75"],"import {useEffect, useState} from 'react'\r\nimport {AppButton} from 'src/components/AppButton'\r\nimport {AppInput} from 'src/components/AppInput'\r\nimport AppValue from 'src/components/AppValue'\r\nimport {Currency} from 'src/repository/entities/Currency'\r\nimport {ChainType} from 'src/servises/network/ChainType'\r\nimport {addressShortener} from 'src/utils/StringUtils'\r\nimport BigNumber from 'bignumber.js'\r\nimport AppTable from 'src/components/table/AppTable'\r\nimport AppTableRow from 'src/components/table/AppTableRow'\r\nimport AppTableCol from 'src/components/table/AppTableCol'\r\nimport HintBlock from './components/HintBlock'\r\nimport AppTableHeaderCol from 'src/components/table/AppTableHeaderCol'\r\nimport {CopyToClipboard} from 'src/utils/CopyToClipboard' \r\nimport {Contract} from 'web3-eth-contract'\r\nimport ERC20 from 'src/repository/source/ethereum/abi/ERC20.json'\r\nimport {AbiItem} from 'web3-utils'\r\nimport Theme from './components/theme'\r\nimport { ChakraProvider, useDisclosure } from \"@chakra-ui/react\"\r\nimport ConnectButton from 'src/components/ConnectButton'\r\nimport AccountModal from \"./components/AccountModal\"\r\nimport { useEthers } from '@usedapp/core'\r\nimport Web3 from 'web3';\r\n\r\n    \r\n\r\nconst TestGame = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const {account, chainId} = useEthers()\r\n  const [walletsBalances] = useState<Map<string, Currency[]>>(new Map())\r\n\r\n/* const balance =  async (\r\n    tokenAddress: any\r\n    ) => TESTGetTokensBalanceByAccountInteractor */\r\n\r\n  const walletsNames: Map<string, string> = new Map([\r\n    [\"0x2C39b0d4390aB24658b57EcAe1C07fa171cb858f\", \"Семен Синицын\"],\r\n    [\"0x0Ea09B8cC1c50ABa461be9A2A60deE1Be31fed8A\", \"Мария Игнатьева\"],\r\n    [\"0xF3f6e35aB2Fefe8d45e60715dd4acfb9b1a13bBB\", \"Олег Вислов\"],\r\n    [\"0x72598a991BAdD8195Df352710d14b75A02cC2195\", \"Павел Т\"],\r\n    [\"0x193ab79E5B5FBc6Eb303deF30A3c32D24178E571\", \"Илья К\"],\r\n    [\"0x2bE45095521dd63Cf880C24CDace74449d603DFa\", \"Эдуард К\"],\r\n    [\"0xb370eC2782B74e087C06e63435542a636b658fFC\", \"Ирина Мультан\"],\r\n    [\"0xeB0ea44144087f4e11aa433760e8747E21142dF6\", \"Татьяна Владимирова\"],\r\n    [\"0xBEF7b2164224CC64B6E2693c21E60e18d646D157\", \"Александр Дягилев\"],\r\n    [\"0x6B99baE0295cA22FaF62E4e821965271D84da0Cb\", \"Лилия Р\"],\r\n    [\"0x94Cbe46690867A5F7455E52598D1dE2a04234d5B\", \"Василий Трофимчук\"]\r\n\r\n  ])\r\n\r\n  const walletsToFetch = [\r\n    \"0x2C39b0d4390aB24658b57EcAe1C07fa171cb858f\",\r\n    \"0x6B99baE0295cA22FaF62E4e821965271D84da0Cb\",\r\n    \"0x0Ea09B8cC1c50ABa461be9A2A60deE1Be31fed8A\",\r\n    \"0xF3f6e35aB2Fefe8d45e60715dd4acfb9b1a13bBB\",\r\n    \"0x72598a991BAdD8195Df352710d14b75A02cC2195\",\r\n    \"0x193ab79E5B5FBc6Eb303deF30A3c32D24178E571\",\r\n    \"0x2bE45095521dd63Cf880C24CDace74449d603DFa\",\r\n    \"0xb370eC2782B74e087C06e63435542a636b658fFC\",\r\n    \"0x94Cbe46690867A5F7455E52598D1dE2a04234d5B\",\r\n    \"0xeB0ea44144087f4e11aa433760e8747E21142dF6\",\r\n    \"0xBEF7b2164224CC64B6E2693c21E60e18d646D157\"\r\n  ]\r\n\r\n   \r\nconst tokensToFetch: Currency[] = [\r\n    Currency.MATIC,\r\n    new Currency(\r\n      'TOK',\r\n      2,\r\n      new BigNumber(0), ///always 0\r\n      ChainType.POLYGON,\r\n      '0xF385Da740B7aa9d5A9170e8673423339089Da55D',\r\n      \"\",\r\n      ),\r\n    new Currency(\r\n      'PPL',\r\n      0, //decimals amount\r\n      new BigNumber(0),\r\n      ChainType.POLYGON,\r\n      '0xd5802CEC841d3E9Abc99453bDF51fBB706E03689',\r\n      \"\",\r\n    ),\r\n    new Currency(\r\n      'Soup',\r\n      0,\r\n      new BigNumber(0), ///always 0\r\n      ChainType.POLYGON,\r\n      '0xC764a929a3284A842a6C26CC998553199A93c741',\r\n      \"\",\r\n    )\r\n  ]\r\n\r\n    const web3 = new Web3();\r\n    \r\n    const walletsBalance = async () => {\r\n      \r\n      return await Promise.all(\r\n        walletsToFetch.map ( wallet => tokensToFetch.map(async (token) => \r\n            {const contract: Contract = new web3!.eth.Contract(ERC20 as AbiItem[], token.address ) as any\r\n              console.log(Contract)\r\n            \r\n              const result = await contract.methods.balanceOf(wallet).call();\r\n              return result \r\n               \r\n            }\r\n          ) \r\n        )\r\n      )\r\n      \r\n    }\r\n  \r\n    \r\n\r\nconst sendTokens = async (\r\n    tokenAddress: string | undefined, \r\n    userAddress: string,\r\n    amount: string\r\n  ) => {\r\n    const contract: Contract = new web3!.eth.Contract(ERC20 as AbiItem[], tokenAddress) as any\r\n    if (tokenAddress) await contract.methods.transferFrom(\r\n      account,\r\n      userAddress,\r\n      Currency.MATIC.convertToWei(parseFloat(amount))\r\n    ).call()\r\n    else await web3!.eth.sendTransaction({\r\n      to: userAddress, \r\n      from: account, \r\n      value: Currency.MATIC.convertToWei(parseFloat(amount))\r\n    })\r\n  }\r\n  \r\n\r\n  \r\n  useEffect(() => {\r\n    if (web3 && web3.eth) walletsBalance()\r\n  }, [web3])\r\n\r\n  const addToken = async () => {\r\n    if (web3) {\r\n      await (web3.currentProvider as any).request(\r\n        {\r\n          method: 'wallet_watchAsset',\r\n          params: {\r\n            \"type\": \"ERC20\",\r\n            \"options\": {\r\n              \"address\": \"0xF385Da740B7aa9d5A9170e8673423339089Da55D\",\r\n              \"symbol\": \"TOK\",\r\n              \"decimals\": 2,\r\n              \"image\": \"\"\r\n            },\r\n          },\r\n          id: 25,\r\n        },\r\n        (err: any, result: any) => {\r\n          if (err) {\r\n            return console.error(err)\r\n          } else {\r\n            return console.log(result.result)\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n  \r\n\r\n  const columnWidth = 'calc(100%/5)' //divide on number of columns\r\n  return (\r\n    <ChakraProvider>\r\n    <Theme>\r\n    <ConnectButton handleOpenModal={onOpen} />\r\n    <AccountModal isOpen={isOpen} onClose={onClose} />\r\n      <AppButton\r\n        onClick={async () => account ? await addToken() : chainId}\r\n        style={{\r\n          margin: 'auto',\r\n          padding: '10px 15px'\r\n        }}\r\n      >\r\n        Add TOK token\r\n      </AppButton>\r\n\r\n      <AppTable>\r\n        <AppTableRow>\r\n          <AppTableHeaderCol width={columnWidth}>\r\n            Name\r\n          </AppTableHeaderCol>\r\n          <AppTableHeaderCol width={columnWidth}>\r\n            Wallet\r\n          </AppTableHeaderCol>\r\n          {tokensToFetch.map((token, index) => (\r\n            <AppTableHeaderCol width={columnWidth} key={index}>\r\n              {token.symbol} Amount\r\n            </AppTableHeaderCol>\r\n          ))}\r\n        </AppTableRow>\r\n        {[...walletsBalances.keys()].length > 0 ? walletsToFetch.map((item, index) => (\r\n          <AppTableRow key={index}>\r\n            <AppTableCol width={columnWidth}>\r\n              {walletsNames.get(item)}\r\n            </AppTableCol>\r\n            <AppTableCol width={columnWidth}>\r\n              <>\r\n              {addressShortener(item, [6, 6])}\r\n            <button onClick={CopyToClipboard(item)}></button>\r\n              </>\r\n            </AppTableCol>\r\n            {walletsBalances.get(item)?.map((currency, ind) => (\r\n              <AppTableCol key={ind} width={columnWidth}>\r\n                <AppValue\r\n                  value={Currency.MATIC.convertFromWei(currency.value.toString())}\r\n                  currency={currency}\r\n                  chain={currency.chain}\r\n                  roundingFloat\r\n                >\r\n                  &nbsp;{currency.symbol}\r\n                </AppValue>\r\n                <form\r\n                  style={{\r\n                    width: 'auto',\r\n                    display: 'flex',\r\n                    flexFlow: 'row nowrap',\r\n                    gap: '5px'\r\n                  }}\r\n                  onSubmit={async (e) => {\r\n                    e.preventDefault()\r\n                    await sendTokens(\r\n                      currency.address ?? undefined,\r\n                      item,\r\n                      (e.target[0] as HTMLInputElement).value\r\n                    )\r\n                  }}\r\n                >\r\n                  <AppInput\r\n                    \r\n                    onChange={() => null}\r\n                    name='amount'\r\n                    placeholder={'amount'}\r\n                    style={{\r\n                      height: '26px',\r\n                      width: '75px'\r\n                    }}\r\n                    autoComplete={'off'}\r\n                  />\r\n                  <AppButton\r\n                    \r\n                    name=\"submit\"\r\n                    type='submit'\r\n                    style={{\r\n                      height: '26px'\r\n                    }}\r\n                  >\r\n                    Send\r\n                  </AppButton>\r\n                </form>\r\n              </AppTableCol>\r\n            ))}\r\n\r\n          </AppTableRow>\r\n        )) : <HintBlock text='loading or no data...' />}\r\n      </AppTable>\r\n    </Theme>\r\n    </ChakraProvider>\r\n  )\r\n}\r\n\r\nexport default TestGame","C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\HintBlock.tsx",[],"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\AppInput.tsx",[],"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\theme.tsx",[],"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\AccountModal.tsx",[],"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\AppButton.tsx",[],"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\ConnectButton.tsx",[],"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\AppValue.tsx",[],"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\utils\\StringUtils.tsx",[],"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\utils\\CopyToClipboard.tsx",[],"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\table\\AppTable.tsx",[],"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\table\\AppTableRow.tsx",[],"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\table\\AppTableCol.tsx",[],"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\table\\AppTableHeaderCol.tsx",[],"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\repository\\entities\\Currency.tsx",[],"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\servises\\network\\ChainType.tsx",[],"C:\\Users\\Kompa\\Desktop\\games\\my-app\\src\\components\\Identicon.tsx",[],{"ruleId":"76","severity":1,"message":"77","line":137,"column":6,"nodeType":"78","endLine":137,"endColumn":12,"suggestions":"79"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'walletsBalance'. Either include it or remove the dependency array.","ArrayExpression",["80"],{"desc":"81","fix":"82"},"Update the dependencies array to be: [walletsBalance, web3]",{"range":"83","text":"84"},[4726,4732],"[walletsBalance, web3]"]