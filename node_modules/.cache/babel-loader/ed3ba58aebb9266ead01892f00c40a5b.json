{"ast":null,"code":"import _objectSpread from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { classOf, getClassOrSymbol, isClass, methodsOf, nameOf, Store } from \"@tsed/core\";\nimport { ProviderScope } from \"./ProviderScope.js\";\nimport { ProviderType } from \"./ProviderType.js\";\nexport var Provider = /*#__PURE__*/function () {\n  function Provider(token) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Provider);\n    /**\n     * Token group provider to retrieve all provider from the same type\n     */\n    _defineProperty(this, \"type\", ProviderType.PROVIDER);\n    _defineProperty(this, \"deps\", void 0);\n    _defineProperty(this, \"imports\", void 0);\n    _defineProperty(this, \"useFactory\", void 0);\n    _defineProperty(this, \"useAsyncFactory\", void 0);\n    _defineProperty(this, \"useValue\", void 0);\n    _defineProperty(this, \"hooks\", void 0);\n    _defineProperty(this, \"_useClass\", void 0);\n    _defineProperty(this, \"_provide\", void 0);\n    _defineProperty(this, \"_store\", void 0);\n    _defineProperty(this, \"_tokenStore\", void 0);\n    this.provide = token;\n    this.useClass = token;\n    Object.assign(this, options);\n  }\n  _createClass(Provider, [{\n    key: \"token\",\n    get: function get() {\n      return this._provide;\n    }\n  }, {\n    key: \"provide\",\n    get: function get() {\n      return this._provide;\n    },\n    set: function set(value) {\n      if (value) {\n        this._provide = getClassOrSymbol(value);\n        this._tokenStore = this._store = Store.from(value);\n      }\n    }\n  }, {\n    key: \"useClass\",\n    get: function get() {\n      return this._useClass;\n    }\n    /**\n     * Create a new store if the given value is a class. Otherwise the value is ignored.\n     * @param value\n     */,\n    set: function set(value) {\n      if (isClass(value)) {\n        this._useClass = classOf(value);\n        this._store = Store.from(value);\n        this.hooks = methodsOf(this._useClass).reduce(function (hooks, _ref) {\n          var propertyKey = _ref.propertyKey;\n          if (String(propertyKey).startsWith(\"$\")) {\n            return _objectSpread(_objectSpread({}, hooks), {}, _defineProperty({}, propertyKey, function (instance) {\n              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                args[_key - 1] = arguments[_key];\n              }\n              return instance[propertyKey].apply(instance, args);\n            }));\n          }\n          return hooks;\n        }, {});\n      }\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return this.name;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return nameOf(this.provide);\n    }\n  }, {\n    key: \"store\",\n    get: function get() {\n      return this._store;\n    }\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this.store.get(\"path\", \"/\");\n    },\n    set: function set(path) {\n      this.store.set(\"path\", path);\n    }\n    /**\n     * Get the scope of the provider.\n     *\n     * ::: tip Note\n     * Async provider is always a SINGLETON\n     * :::\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scope\",\n    get: function get() {\n      if (this.isAsync()) {\n        return ProviderScope.SINGLETON;\n      }\n      return this.get(\"scope\");\n    }\n    /**\n     * Change the scope value of the provider.\n     * @param scope\n     */,\n    set: function set(scope) {\n      this.store.set(\"scope\", scope);\n    }\n  }, {\n    key: \"configuration\",\n    get: function get() {\n      return this.get(\"configuration\");\n    },\n    set: function set(configuration) {\n      this.store.set(\"configuration\", configuration);\n    }\n  }, {\n    key: \"children\",\n    get: function get() {\n      return this.store.get(\"childrenControllers\", []);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this.store.get(key) || this._tokenStore.get(key);\n    }\n  }, {\n    key: \"isAsync\",\n    value: function isAsync() {\n      return !!this.useAsyncFactory;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new (classOf(this))(this._provide, this);\n    }\n    /**\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"hasChildren\",\n    value: function hasChildren() {\n      return !!this.children.length;\n    }\n    /**\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"hasParent\",\n    value: function hasParent() {\n      return !!this.store.get(\"parentController\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return [\"Token\", this.name, this.useClass && nameOf(this.useClass), this.useFactory && \"Factory\", this.useValue && \"Value\", this.useAsyncFactory && \"AsyncFactory\"].filter(Boolean).join(\":\");\n    }\n  }]);\n  return Provider;\n}();","map":{"version":3,"sources":["../../../src/domain/Provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { classOf, getClassOrSymbol, isClass, methodsOf, nameOf, Store } from \"@tsed/core\";\nimport { ProviderScope } from \"./ProviderScope.js\";\nimport { ProviderType } from \"./ProviderType.js\";\nexport class Provider {\n    /**\n     * Token group provider to retrieve all provider from the same type\n     */\n    type = ProviderType.PROVIDER;\n    deps;\n    imports;\n    useFactory;\n    useAsyncFactory;\n    useValue;\n    hooks;\n    _useClass;\n    _provide;\n    _store;\n    _tokenStore;\n    constructor(token, options = {}) {\n        this.provide = token;\n        this.useClass = token;\n        Object.assign(this, options);\n    }\n    get token() {\n        return this._provide;\n    }\n    get provide() {\n        return this._provide;\n    }\n    set provide(value) {\n        if (value) {\n            this._provide = getClassOrSymbol(value);\n            this._tokenStore = this._store = Store.from(value);\n        }\n    }\n    get useClass() {\n        return this._useClass;\n    }\n    /**\n     * Create a new store if the given value is a class. Otherwise the value is ignored.\n     * @param value\n     */\n    set useClass(value) {\n        if (isClass(value)) {\n            this._useClass = classOf(value);\n            this._store = Store.from(value);\n            this.hooks = methodsOf(this._useClass).reduce((hooks, { propertyKey }) => {\n                if (String(propertyKey).startsWith(\"$\")) {\n                    return {\n                        ...hooks,\n                        [propertyKey]: (instance, ...args) => instance[propertyKey](...args)\n                    };\n                }\n                return hooks;\n            }, {});\n        }\n    }\n    get className() {\n        return this.name;\n    }\n    get name() {\n        return nameOf(this.provide);\n    }\n    get store() {\n        return this._store;\n    }\n    get path() {\n        return this.store.get(\"path\", \"/\");\n    }\n    set path(path) {\n        this.store.set(\"path\", path);\n    }\n    /**\n     * Get the scope of the provider.\n     *\n     * ::: tip Note\n     * Async provider is always a SINGLETON\n     * :::\n     *\n     * @returns {boolean}\n     */\n    get scope() {\n        if (this.isAsync()) {\n            return ProviderScope.SINGLETON;\n        }\n        return this.get(\"scope\");\n    }\n    /**\n     * Change the scope value of the provider.\n     * @param scope\n     */\n    set scope(scope) {\n        this.store.set(\"scope\", scope);\n    }\n    get configuration() {\n        return this.get(\"configuration\");\n    }\n    set configuration(configuration) {\n        this.store.set(\"configuration\", configuration);\n    }\n    get children() {\n        return this.store.get(\"childrenControllers\", []);\n    }\n    get(key) {\n        return this.store.get(key) || this._tokenStore.get(key);\n    }\n    isAsync() {\n        return !!this.useAsyncFactory;\n    }\n    clone() {\n        return new (classOf(this))(this._provide, this);\n    }\n    /**\n     *\n     * @returns {boolean}\n     */\n    hasChildren() {\n        return !!this.children.length;\n    }\n    /**\n     *\n     * @returns {boolean}\n     */\n    hasParent() {\n        return !!this.store.get(\"parentController\");\n    }\n    toString() {\n        return [\n            \"Token\",\n            this.name,\n            this.useClass && nameOf(this.useClass),\n            this.useFactory && \"Factory\",\n            this.useValue && \"Value\",\n            this.useAsyncFactory && \"AsyncFactory\"\n        ]\n            .filter(Boolean)\n            .join(\":\");\n    }\n}\n//# sourceMappingURL=Provider.js.map"]},"metadata":{},"sourceType":"module"}