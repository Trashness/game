{"ast":null,"code":"import _slicedToArray from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport { WindowContext } from './context';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function WindowProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isActiveWindow = _useState2[0],\n    setActiveWindow = _useState2[1];\n  useEffect(function () {\n    var visibilityChangeListener = function visibilityChangeListener() {\n      switch (document.visibilityState) {\n        case 'hidden':\n          setActiveWindow(false);\n          break;\n        case 'visible':\n          setActiveWindow(true);\n          break;\n      }\n    };\n    document.addEventListener('visibilitychange', visibilityChangeListener);\n    return function () {\n      return document.removeEventListener('visibilitychange', visibilityChangeListener);\n    };\n  }, []);\n  return _jsx(WindowContext.Provider, {\n    value: isActiveWindow,\n    children: children\n  });\n}","map":{"version":3,"sources":["../../../../../src/providers/window/provider.tsx"],"names":[],"mappings":";;AAAA,SAAoB,QAAQ,EAAE,SAAS,QAAQ,OAAO;AACtD,SAAS,aAAa,QAAQ,WAAW;AAMzC;;AAEG;AACH,OAAM,SAAU,cAAc,CAAA,IAAA,EAAoB;EAAA,IAAjB,QAAQ,GAAA,IAAA,CAAR,QAAQ;EACvC,IAAA,SAAA,GAA0C,QAAQ,CAAC,IAAI,CAAC;IAAA,UAAA,GAAA,cAAA,CAAA,SAAA;IAAjD,cAAc,GAAA,UAAA;IAAE,eAAe,GAAA,UAAA;EAEtC,SAAS,CAAC,YAAK;IACb,IAAM,wBAAwB,GAAG,SAA3B,wBAAwB,CAAA,EAAQ;MACpC,QAAQ,QAAQ,CAAC,eAAe;QAC9B,KAAK,QAAQ;UACX,eAAe,CAAC,KAAK,CAAC;UACtB;QACF,KAAK,SAAS;UACZ,eAAe,CAAC,IAAI,CAAC;UACrB;MAAK;IAEX,CAAC;IACD,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,wBAAwB,CAAC;IACvE,OAAO;MAAA,OAAM,QAAQ,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,wBAAwB,CAAC;IAAA;EACzF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAA,CAAC,aAAa,CAAC,QAAQ,EAAA;IAAC,KAAK,EAAE,cAAc;IAAE,QAAQ,EAAE;EAAQ,CAAA,CAAI;AAC9E","sourceRoot":"","sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport { WindowContext } from './context';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function WindowProvider({ children }) {\n    const [isActiveWindow, setActiveWindow] = useState(true);\n    useEffect(() => {\n        const visibilityChangeListener = () => {\n            switch (document.visibilityState) {\n                case 'hidden':\n                    setActiveWindow(false);\n                    break;\n                case 'visible':\n                    setActiveWindow(true);\n                    break;\n            }\n        };\n        document.addEventListener('visibilitychange', visibilityChangeListener);\n        return () => document.removeEventListener('visibilitychange', visibilityChangeListener);\n    }, []);\n    return _jsx(WindowContext.Provider, { value: isActiveWindow, children: children });\n}\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"module"}