{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar hasher = require('./hasher.js');\nvar sha = function sha(name) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = Uint8Array;\n            _context.next = 3;\n            return crypto.subtle.digest(name, data);\n          case 3:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", new _context.t0(_context.t1));\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nvar sha256 = hasher.from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nvar sha512 = hasher.from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});\nexports.sha256 = sha256;\nexports.sha512 = sha512;","map":{"version":3,"names":["_regeneratorRuntime","require","default","_asyncToGenerator","Object","defineProperty","exports","value","hasher","sha","name","_ref","mark","_callee","data","wrap","_callee$","_context","prev","next","t0","Uint8Array","crypto","subtle","digest","t1","sent","abrupt","stop","_x","apply","arguments","sha256","from","code","encode","sha512"],"sources":["C:/Users/Kompa/Desktop/games/my-app/node_modules/multiformats/cjs/src/hashes/sha2-browser.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar hasher = require('./hasher.js');\n\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nconst sha256 = hasher.from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nconst sha512 = hasher.from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});\n\nexports.sha256 = sha256;\nexports.sha512 = sha512;\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,mBAAA,GAAAC,OAAA,kGAAAC,OAAA;AAAA,IAAAC,iBAAA,GAAAF,OAAA,gGAAAC,OAAA;AAEbE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,MAAM,GAAGP,OAAO,CAAC,aAAa,CAAC;AAEnC,IAAMQ,GAAG,GAAG,SAANA,GAAGA,CAAGC,IAAI;EAAA;IAAA,IAAAC,IAAA,GAAAR,iBAAA,eAAAH,mBAAA,GAAAY,IAAA,CAAI,SAAAC,QAAMC,IAAI;MAAA,OAAAd,mBAAA,GAAAe,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAG,EAAA,GAAQC,UAAU;YAAAJ,QAAA,CAAAE,IAAA;YAAA,OAAOG,MAAM,CAACC,MAAM,CAACC,MAAM,CAACd,IAAI,EAAEI,IAAI,CAAC;UAAA;YAAAG,QAAA,CAAAQ,EAAA,GAAAR,QAAA,CAAAS,IAAA;YAAA,OAAAT,QAAA,CAAAU,MAAA,eAAAV,QAAA,CAAAG,EAAA,CAAAH,QAAA,CAAAQ,EAAA;UAAA;UAAA;YAAA,OAAAR,QAAA,CAAAW,IAAA;QAAA;MAAA,GAAAf,OAAA;IAAA,CAAC;IAAA,iBAAAgB,EAAA;MAAA,OAAAlB,IAAA,CAAAmB,KAAA,OAAAC,SAAA;IAAA;EAAA;AAAA;AACxF,IAAMC,MAAM,GAAGxB,MAAM,CAACyB,IAAI,CAAC;EACzBvB,IAAI,EAAE,UAAU;EAChBwB,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE1B,GAAG,CAAC,SAAS;AACvB,CAAC,CAAC;AACF,IAAM2B,MAAM,GAAG5B,MAAM,CAACyB,IAAI,CAAC;EACzBvB,IAAI,EAAE,UAAU;EAChBwB,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE1B,GAAG,CAAC,SAAS;AACvB,CAAC,CAAC;AAEFH,OAAO,CAAC0B,MAAM,GAAGA,MAAM;AACvB1B,OAAO,CAAC8B,MAAM,GAAGA,MAAM"},"metadata":{},"sourceType":"script"}