{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _asyncToGenerator from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { providers } from 'ethers';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { Event } from '../../../../helpers/event';\nvar GET_COINBASE_LINK = 'https://www.coinbase.com/wallet';\nexport function getCoinbaseProvider() {\n  return _getCoinbaseProvider.apply(this, arguments);\n}\nfunction _getCoinbaseProvider() {\n  _getCoinbaseProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n    var _a, injectedProviders, injectedProvider, provider;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          if (window.ethereum) {\n            _context5.next = 3;\n            break;\n          }\n          window.open(GET_COINBASE_LINK);\n          return _context5.abrupt(\"return\", undefined);\n        case 3:\n          injectedProviders = (window === null || window === void 0 ? void 0 : window.ethereum.providers) || [];\n          if (!((_a = injectedProviders.find(function (provider) {\n            var _a;\n            return (_a = provider.isWalletLink) !== null && _a !== void 0 ? _a : false;\n          })) !== null && _a !== void 0)) {\n            _context5.next = 8;\n            break;\n          }\n          _context5.t0 = _a;\n          _context5.next = 11;\n          break;\n        case 8:\n          _context5.next = 10;\n          return detectEthereumProvider();\n        case 10:\n          _context5.t0 = _context5.sent;\n        case 11:\n          injectedProvider = _context5.t0;\n          if (!(!injectedProvider || !injectedProvider.isWalletLink)) {\n            _context5.next = 15;\n            break;\n          }\n          console.log(\"Coinbase wallet is not installed - you can get it under \".concat(GET_COINBASE_LINK));\n          return _context5.abrupt(\"return\", undefined);\n        case 15:\n          provider = new providers.Web3Provider(injectedProvider, 'any');\n          return _context5.abrupt(\"return\", provider);\n        case 17:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return _getCoinbaseProvider.apply(this, arguments);\n}\nexport var CoinbaseWalletConnector = /*#__PURE__*/function () {\n  function CoinbaseWalletConnector() {\n    _classCallCheck(this, CoinbaseWalletConnector);\n    this.name = 'CoinbaseWallet';\n    this.update = new Event();\n  }\n  _createClass(CoinbaseWalletConnector, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var metamask;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.provider) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              _context.next = 4;\n              return getCoinbaseProvider();\n            case 4:\n              metamask = _context.sent;\n              if (metamask) {\n                _context.next = 7;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 7:\n              this.provider = metamask;\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"connectEagerly\",\n    value: function () {\n      var _connectEagerly = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var chainId, accounts;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.init();\n            case 2:\n              if (this.provider) {\n                _context2.next = 4;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 4:\n              _context2.prev = 4;\n              _context2.next = 7;\n              return this.provider.send('eth_chainId', []);\n            case 7:\n              chainId = _context2.sent;\n              _context2.next = 10;\n              return this.provider.send('eth_accounts', []);\n            case 10:\n              accounts = _context2.sent;\n              this.update.emit({\n                chainId: parseInt(chainId),\n                accounts: accounts\n              });\n              _context2.next = 17;\n              break;\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](4);\n              console.debug(_context2.t0);\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[4, 14]]);\n      }));\n      function connectEagerly() {\n        return _connectEagerly.apply(this, arguments);\n      }\n      return connectEagerly;\n    }()\n  }, {\n    key: \"activate\",\n    value: function () {\n      var _activate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _a, chainId, accounts;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.init();\n            case 2:\n              if (this.provider) {\n                _context3.next = 4;\n                break;\n              }\n              throw new Error('Could not activate connector');\n            case 4:\n              _context3.prev = 4;\n              _context3.next = 7;\n              return this.provider.send('eth_chainId', []);\n            case 7:\n              chainId = _context3.sent;\n              _context3.next = 10;\n              return this.provider.send('eth_requestAccounts', []);\n            case 10:\n              accounts = _context3.sent;\n              this.update.emit({\n                chainId: parseInt(chainId),\n                accounts: accounts\n              });\n              _context3.next = 18;\n              break;\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](4);\n              console.log(_context3.t0);\n              throw new Error('Could not activate connector: ' + ((_a = _context3.t0.message) !== null && _a !== void 0 ? _a : ''));\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[4, 14]]);\n      }));\n      function activate() {\n        return _activate.apply(this, arguments);\n      }\n      return activate;\n    }()\n  }, {\n    key: \"deactivate\",\n    value: function () {\n      var _deactivate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              this.provider = undefined;\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function deactivate() {\n        return _deactivate.apply(this, arguments);\n      }\n      return deactivate;\n    }()\n  }]);\n  return CoinbaseWalletConnector;\n}();","map":{"version":3,"sources":["../../../../../../../src/providers/network/connectors/implementations/coinbase.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { providers } from 'ethers';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { Event } from '../../../../helpers/event';\nconst GET_COINBASE_LINK = 'https://www.coinbase.com/wallet';\nexport async function getCoinbaseProvider() {\n    var _a;\n    if (!window.ethereum) {\n        window.open(GET_COINBASE_LINK);\n        return undefined;\n    }\n    const injectedProviders = (window === null || window === void 0 ? void 0 : window.ethereum.providers) || [];\n    const injectedProvider = (_a = injectedProviders.find((provider) => {\n        var _a;\n        return (_a = provider.isWalletLink) !== null && _a !== void 0 ? _a : false;\n    })) !== null && _a !== void 0 ? _a : (await detectEthereumProvider());\n    if (!injectedProvider || !injectedProvider.isWalletLink) {\n        console.log(`Coinbase wallet is not installed - you can get it under ${GET_COINBASE_LINK}`);\n        return undefined;\n    }\n    const provider = new providers.Web3Provider(injectedProvider, 'any');\n    return provider;\n}\nexport class CoinbaseWalletConnector {\n    constructor() {\n        this.name = 'CoinbaseWallet';\n        this.update = new Event();\n    }\n    async init() {\n        if (this.provider)\n            return;\n        const metamask = await getCoinbaseProvider();\n        if (!metamask) {\n            return;\n        }\n        this.provider = metamask;\n    }\n    async connectEagerly() {\n        await this.init();\n        if (!this.provider) {\n            return;\n        }\n        try {\n            const chainId = await this.provider.send('eth_chainId', []);\n            const accounts = await this.provider.send('eth_accounts', []);\n            this.update.emit({ chainId: parseInt(chainId), accounts });\n        }\n        catch (e) {\n            console.debug(e);\n        }\n    }\n    async activate() {\n        var _a;\n        await this.init();\n        if (!this.provider) {\n            throw new Error('Could not activate connector');\n        }\n        try {\n            const chainId = await this.provider.send('eth_chainId', []);\n            const accounts = await this.provider.send('eth_requestAccounts', []);\n            this.update.emit({ chainId: parseInt(chainId), accounts });\n        }\n        catch (e) {\n            console.log(e);\n            throw new Error('Could not activate connector: ' + ((_a = e.message) !== null && _a !== void 0 ? _a : ''));\n        }\n    }\n    async deactivate() {\n        this.provider = undefined;\n    }\n}\n//# sourceMappingURL=coinbase.js.map"]},"metadata":{},"sourceType":"module"}