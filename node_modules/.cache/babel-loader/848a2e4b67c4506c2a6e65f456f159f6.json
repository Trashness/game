{"ast":null,"code":"// number of bytes in the hext string - '0x' at the start doesn't count\n// each two characters are one byte\nexport var buffLength = function buffLength(buf) {\n  return (buf.length - 2) / 2;\n};\n// length of the buffer padded to the nearest 32 bytes\nexport var bufPaddedLength = function bufPaddedLength(buf) {\n  return Math.ceil(buffLength(buf) / 32) * 32;\n};\nexport var encodeUint = function encodeUint(uint) {\n  return uint.toString(16).padStart(64, '0');\n};\nexport var decodeUint = function decodeUint(buf) {\n  return parseInt(buf, 16);\n};\n// word length in characters - 32 bytes = 64 characters\nexport var wordLength = 64;\nexport var fail = function fail() {\n  throw new Error('Invalid calldata');\n};","map":{"version":3,"sources":["../../../../src/abi/common.ts"],"names":[],"mappings":"AAAA;AACA;AACA,OAAO,IAAM,UAAU,GAAG,SAAb,UAAU,CAAI,GAAW;EAAA,OAAK,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC;AAAA;AAC/D;AACA,OAAO,IAAM,eAAe,GAAG,SAAlB,eAAe,CAAI,GAAW;EAAA,OAAK,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;AAAA;AACpF,OAAO,IAAM,UAAU,GAAG,SAAb,UAAU,CAAI,IAAY;EAAA,OAAK,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC;AAAA;AAC/E,OAAO,IAAM,UAAU,GAAG,SAAb,UAAU,CAAI,GAAW;EAAA,OAAK,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC;AAAA;AAC5D;AACA,OAAO,IAAM,UAAU,GAAG,EAAE;AAC5B,OAAO,IAAM,IAAI,GAAG,SAAP,IAAI,CAAA,EAAQ;EACvB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC;AACrC,CAAC","sourceRoot":"","sourcesContent":["// number of bytes in the hext string - '0x' at the start doesn't count\n// each two characters are one byte\nexport const buffLength = (buf) => (buf.length - 2) / 2;\n// length of the buffer padded to the nearest 32 bytes\nexport const bufPaddedLength = (buf) => Math.ceil(buffLength(buf) / 32) * 32;\nexport const encodeUint = (uint) => uint.toString(16).padStart(64, '0');\nexport const decodeUint = (buf) => parseInt(buf, 16);\n// word length in characters - 32 bytes = 64 characters\nexport const wordLength = 64;\nexport const fail = () => {\n    throw new Error('Invalid calldata');\n};\n//# sourceMappingURL=common.js.map"]},"metadata":{},"sourceType":"module"}