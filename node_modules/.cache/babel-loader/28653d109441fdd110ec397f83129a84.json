{"ast":null,"code":"import _defineProperty from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nexport function transactionReducer(state, action) {\n  var _a, _b;\n  switch (action.type) {\n    case 'ADD_TRANSACTION':\n      {\n        var chainId = action.payload.transaction.chainId;\n        return Object.assign(Object.assign({}, state), _defineProperty({}, chainId, [action.payload].concat(_toConsumableArray((_a = state[chainId]) !== null && _a !== void 0 ? _a : []))));\n      }\n    case 'UPDATE_TRANSACTION':\n      {\n        var _action$payload$trans = action.payload.transaction,\n          _chainId = _action$payload$trans.chainId,\n          hash = _action$payload$trans.hash;\n        return Object.assign(Object.assign({}, state), _defineProperty({}, _chainId, ((_b = state[_chainId]) !== null && _b !== void 0 ? _b : []).map(function (tx) {\n          return tx.transaction.hash === hash ? Object.assign(Object.assign({}, tx), action.payload) : tx;\n        })));\n      }\n    case 'UPDATE_TRANSACTIONS':\n      return Object.assign(Object.assign({}, state), _defineProperty({}, action.chainId, _toConsumableArray(action.transactions)));\n  }\n}","map":{"version":3,"sources":["../../../../../src/providers/transactions/reducer.ts"],"names":[],"mappings":";;AAkBA,OAAM,SAAU,kBAAkB,CAAC,KAAyB,EAAE,MAAc,EAAA;;EAC1E,QAAQ,MAAM,CAAC,IAAI;IACjB,KAAK,iBAAiB;MAAE;QACtB,IAAQ,OAAO,GAAK,MAAM,CAAC,OAAO,CAAC,WAAW,CAAtC,OAAO;QACf,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EACK,KAAK,CAAA,EAAA,eAAA,KACP,OAAO,GAAI,MAAM,CAAC,OAAO,EAAA,MAAA,CAAA,kBAAA,CAAM,CAAA,EAAA,GAAA,KAAK,CAAC,OAAO,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,IAAE;MAEzD;IACD,KAAK,oBAAoB;MAAE;QACzB,IAAA,qBAAA,GAA0B,MAAM,CAAC,OAAO,CAAC,WAAW;UAA5C,QAAO,GAAA,qBAAA,CAAP,OAAO;UAAE,IAAI,GAAA,qBAAA,CAAJ,IAAI;QACrB,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EACK,KAAK,CAAA,EAAA,eAAA,KACP,QAAO,EAAG,CAAC,CAAA,EAAA,GAAA,KAAK,CAAC,QAAO,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,EAAE,GAAG,CAAC,UAAC,EAAE;UAAA,OACvC,EAAE,CAAC,WAAW,CAAC,IAAI,KAAK,IAAI,GAAE,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAM,EAAE,CAAA,EAAK,MAAM,CAAC,OAAO,CAAA,GAAK,EAAE;QAAA,EACjE,EAAA;MAEJ;IACD,KAAK,qBAAqB;MACxB,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAY,KAAK,CAAA,EAAA,eAAA,KAAG,MAAM,CAAC,OAAO,EAAA,kBAAA,CAAO,MAAM,CAAC,YAAY,GAAC;EAAE;AAErE","sourceRoot":"","sourcesContent":["export function transactionReducer(state, action) {\n    var _a, _b;\n    switch (action.type) {\n        case 'ADD_TRANSACTION': {\n            const { chainId } = action.payload.transaction;\n            return Object.assign(Object.assign({}, state), { [chainId]: [action.payload, ...((_a = state[chainId]) !== null && _a !== void 0 ? _a : [])] });\n        }\n        case 'UPDATE_TRANSACTION': {\n            const { chainId, hash } = action.payload.transaction;\n            return Object.assign(Object.assign({}, state), { [chainId]: ((_b = state[chainId]) !== null && _b !== void 0 ? _b : []).map((tx) => tx.transaction.hash === hash ? Object.assign(Object.assign({}, tx), action.payload) : tx) });\n        }\n        case 'UPDATE_TRANSACTIONS':\n            return Object.assign(Object.assign({}, state), { [action.chainId]: [...action.transactions] });\n    }\n}\n//# sourceMappingURL=reducer.js.map"]},"metadata":{},"sourceType":"module"}