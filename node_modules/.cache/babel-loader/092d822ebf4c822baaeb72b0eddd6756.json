{"ast":null,"code":"import _objectSpread from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar removeOldestQuery = function removeOldestQuery(_ref) {\n  var persistedClient = _ref.persistedClient;\n  var mutations = _toConsumableArray(persistedClient.clientState.mutations);\n  var queries = _toConsumableArray(persistedClient.clientState.queries);\n  var client = _objectSpread(_objectSpread({}, persistedClient), {}, {\n    clientState: {\n      mutations: mutations,\n      queries: queries\n    }\n  }); // sort queries by dataUpdatedAt (oldest first)\n\n  var sortedQueries = _toConsumableArray(queries).sort(function (a, b) {\n    return a.state.dataUpdatedAt - b.state.dataUpdatedAt;\n  }); // clean oldest query\n\n  if (sortedQueries.length > 0) {\n    var oldestData = sortedQueries.shift();\n    client.clientState.queries = queries.filter(function (q) {\n      return q !== oldestData;\n    });\n    return client;\n  }\n  return undefined;\n};\nexport { removeOldestQuery };","map":{"version":3,"sources":["../../src/retryStrategies.ts"],"names":["removeOldestQuery","persistedClient","mutations","clientState","queries","client","sortedQueries","sort","a","b","state","dataUpdatedAt","length","oldestData","shift","filter","q","undefined"],"mappings":";;AAQO,IAAMA,iBAAiC,GAAG,SAApCA,iBAAiC,CAAA,IAAA,EAA4B;EAAA,IAAtBC,eAAAA,GAAAA,IAAAA,CAAAA,eAAAA;EAClD,IAAMC,SAAS,GAAA,kBAAA,CAAOD,eAAe,CAACE,WAAhBF,CAA4BC,SAAhC,CAAlB;EACA,IAAME,OAAO,GAAA,kBAAA,CAAOH,eAAe,CAACE,WAAhBF,CAA4BG,OAAhC,CAAhB;EACA,IAAMC,MAAuB,GAAA,aAAA,CAAA,aAAA,KACxBJ,eAD2B;IAE9BE,WAAW,EAAE;MAAED,SAAF,EAAEA,SAAF;MAAaE,OAAAA,EAAAA;IAAb;EAAA,EAFf,CAHwE,CAAA;;EASxE,IAAME,aAAa,GAAG,kBAAA,CAAIF,OAAJ,EAAaG,IAAb,CACpB,UAACC,CAAD,EAAIC,CAAJ;IAAA,OAAUD,CAAC,CAACE,KAAFF,CAAQG,aAARH,GAAwBC,CAAC,CAACC,KAAFD,CAAQE,aADtB;EAAA,EAAtB,CATwE,CAAA;;EAcxE,IAAIL,aAAa,CAACM,MAAdN,GAAuB,CAA3B,EAA8B;IAC5B,IAAMO,UAAU,GAAGP,aAAa,CAACQ,KAAdR,EAAnB;IACAD,MAAM,CAACF,WAAPE,CAAmBD,OAAnBC,GAA6BD,OAAO,CAACW,MAARX,CAAgBY,UAAAA,CAAD;MAAA,OAAOA,CAAC,KAAKH,UAA5BT;IAAAA,EAA7BC;IACA,OAAOA,MAAP;EACD;EAED,OAAOY,SAAP;AACD,CAAA","sourcesContent":["import type { PersistedClient } from '@tanstack/query-persist-client-core'\n\nexport type PersistRetryer = (props: {\n  persistedClient: PersistedClient\n  error: Error\n  errorCount: number\n}) => PersistedClient | undefined\n\nexport const removeOldestQuery: PersistRetryer = ({ persistedClient }) => {\n  const mutations = [...persistedClient.clientState.mutations]\n  const queries = [...persistedClient.clientState.queries]\n  const client: PersistedClient = {\n    ...persistedClient,\n    clientState: { mutations, queries },\n  }\n\n  // sort queries by dataUpdatedAt (oldest first)\n  const sortedQueries = [...queries].sort(\n    (a, b) => a.state.dataUpdatedAt - b.state.dataUpdatedAt,\n  )\n\n  // clean oldest query\n  if (sortedQueries.length > 0) {\n    const oldestData = sortedQueries.shift()\n    client.clientState.queries = queries.filter((q) => q !== oldestData)\n    return client\n  }\n\n  return undefined\n}\n"]},"metadata":{},"sourceType":"module"}