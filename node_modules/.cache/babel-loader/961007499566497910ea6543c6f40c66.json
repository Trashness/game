{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"path\"];\nimport { isArrayOrArrayClass, useDecorators } from \"@tsed/core\";\nimport { Children, Path } from \"@tsed/schema\";\nimport { registerController } from \"../registries/ProviderRegistry.js\";\nfunction mapOptions(options) {\n  if (typeof options === \"string\" || options instanceof RegExp || isArrayOrArrayClass(options)) {\n    return {\n      path: options\n    };\n  }\n  return options;\n}\n/**\n * Declare a new controller with his Rest path. His methods annotated will be collected to build the routing list.\n * This routing listing will be built with the `express.Router` object.\n *\n * ::: tip\n * See [Controllers](/docs/controllers.md) section for more details\n * :::\n *\n * ```typescript\n *  @Controller(\"/calendars\")\n *  export provide CalendarCtrl {\n *\n *    @Get(\"/:id\")\n *    public get(\n *      @Req() request: Req,\n *      @Res() response: Res,\n *      @Next() next: Next\n *    ): void {\n *\n *    }\n *  }\n * ```\n *\n * @param options\n * @controller\n * @decorator\n * @classDecorator\n */\nexport function Controller(options) {\n  var _mapOptions = mapOptions(options),\n    _mapOptions$children = _mapOptions.children,\n    children = _mapOptions$children === void 0 ? [] : _mapOptions$children,\n    path = _mapOptions.path,\n    opts = _objectWithoutProperties(_mapOptions, _excluded);\n  return useDecorators(function (target) {\n    registerController(_objectSpread({\n      provide: target\n    }, opts));\n  }, path && Path(path), Children.apply(void 0, _toConsumableArray(children)));\n}","map":{"version":3,"sources":["../../../src/decorators/controller.ts"],"names":[],"mappings":";;;;AAAA,SAAQ,mBAAmB,EAAQ,aAAa,QAAO,YAAY;AACnE,SAAQ,QAAQ,EAAE,IAAI,QAAO,cAAc;AAE3C,SAAQ,kBAAkB,QAAO,mCAAiC;AAgBlE,SAAS,UAAU,CAAC,OAAY,EAAA;EAC9B,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,YAAY,MAAM,IAAI,mBAAmB,CAAC,OAAO,CAAC,EAAE;IAC5F,OAAO;MACL,IAAI,EAAE;KACP;EACF;EAED,OAAO,OAAO;AAChB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BG;AACH,OAAM,SAAU,UAAU,CAAC,OAAqC,EAAA;EAC9D,IAAA,WAAA,GAAuC,UAAU,CAAC,OAAO,CAAC;IAAA,oBAAA,GAAA,WAAA,CAAnD,QAAQ;IAAR,QAAQ,GAAA,oBAAA,cAAG,EAAE,GAAA,oBAAA;IAAE,IAAI,GAAA,WAAA,CAAJ,IAAI;IAAK,IAAI,GAAA,wBAAA,CAAA,WAAA,EAAA,SAAA;EAEnC,OAAO,aAAa,CAClB,UAAC,MAAY,EAAI;IACf,kBAAkB,CAAA,aAAA;MAChB,OAAO,EAAE;IAAM,GACZ,IAAI,EACP;EACJ,CAAC,EACD,IAAI,IAAI,IAAI,CAAC,IAAW,CAAC,EACzB,QAAQ,CAAA,KAAA,SAAA,kBAAA,CAAI,QAAQ,EAAC,CACtB;AACH","sourceRoot":"","sourcesContent":["import { isArrayOrArrayClass, useDecorators } from \"@tsed/core\";\nimport { Children, Path } from \"@tsed/schema\";\nimport { registerController } from \"../registries/ProviderRegistry.js\";\nfunction mapOptions(options) {\n    if (typeof options === \"string\" || options instanceof RegExp || isArrayOrArrayClass(options)) {\n        return {\n            path: options\n        };\n    }\n    return options;\n}\n/**\n * Declare a new controller with his Rest path. His methods annotated will be collected to build the routing list.\n * This routing listing will be built with the `express.Router` object.\n *\n * ::: tip\n * See [Controllers](/docs/controllers.md) section for more details\n * :::\n *\n * ```typescript\n *  @Controller(\"/calendars\")\n *  export provide CalendarCtrl {\n *\n *    @Get(\"/:id\")\n *    public get(\n *      @Req() request: Req,\n *      @Res() response: Res,\n *      @Next() next: Next\n *    ): void {\n *\n *    }\n *  }\n * ```\n *\n * @param options\n * @controller\n * @decorator\n * @classDecorator\n */\nexport function Controller(options) {\n    const { children = [], path, ...opts } = mapOptions(options);\n    return useDecorators((target) => {\n        registerController({\n            provide: target,\n            ...opts\n        });\n    }, path && Path(path), Children(...children));\n}\n//# sourceMappingURL=controller.js.map"]},"metadata":{},"sourceType":"module"}