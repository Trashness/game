{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { useCallback, useState } from 'react';\nimport { useNotificationsContext, useTransactionsContext } from '../providers';\nimport { BigNumber, errors } from 'ethers';\nimport { buildSafeTransaction, getLatestNonce } from '../helpers/gnosisSafeUtils';\nimport { useEthers } from './useEthers';\nimport { waitForSafeTransaction } from '../helpers/gnosisSafeUtils';\nimport { useGnosisSafeContract } from './useGnosisSafeContract';\n/**\n * @internal\n */\nexport function estimateTransactionGasLimit(_x, _x2, _x3) {\n  return _estimateTransactionGasLimit.apply(this, arguments);\n}\n/**\n * @internal\n */\nfunction _estimateTransactionGasLimit() {\n  _estimateTransactionGasLimit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(transactionRequest, signer, gasLimitBufferPercentage) {\n    var estimatedGas;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!(!signer || !transactionRequest)) {\n            _context4.next = 2;\n            break;\n          }\n          return _context4.abrupt(\"return\", undefined);\n        case 2:\n          _context4.prev = 2;\n          if (!transactionRequest.gasLimit) {\n            _context4.next = 7;\n            break;\n          }\n          _context4.t0 = BigNumber.from(transactionRequest.gasLimit);\n          _context4.next = 10;\n          break;\n        case 7:\n          _context4.next = 9;\n          return signer.estimateGas(transactionRequest);\n        case 9:\n          _context4.t0 = _context4.sent;\n        case 10:\n          estimatedGas = _context4.t0;\n          return _context4.abrupt(\"return\", estimatedGas === null || estimatedGas === void 0 ? void 0 : estimatedGas.mul(gasLimitBufferPercentage + 100).div(100));\n        case 14:\n          _context4.prev = 14;\n          _context4.t1 = _context4[\"catch\"](2);\n          console.error(_context4.t1);\n          return _context4.abrupt(\"return\", undefined);\n        case 18:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[2, 14]]);\n  }));\n  return _estimateTransactionGasLimit.apply(this, arguments);\n}\nexport function estimateContractFunctionGasLimit(_x4, _x5, _x6, _x7) {\n  return _estimateContractFunctionGasLimit.apply(this, arguments);\n}\n/**\n * @internal\n */\nfunction _estimateContractFunctionGasLimit() {\n  _estimateContractFunctionGasLimit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(contractWithSigner, functionName, args, gasLimitBufferPercentage) {\n    var _contractWithSigner$e, estimatedGas, gasLimit;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return (_contractWithSigner$e = contractWithSigner.estimateGas)[functionName].apply(_contractWithSigner$e, _toConsumableArray(args));\n        case 3:\n          estimatedGas = _context5.sent;\n          gasLimit = estimatedGas === null || estimatedGas === void 0 ? void 0 : estimatedGas.mul(gasLimitBufferPercentage + 100).div(100);\n          return _context5.abrupt(\"return\", gasLimit);\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          return _context5.abrupt(\"return\", undefined);\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[0, 8]]);\n  }));\n  return _estimateContractFunctionGasLimit.apply(this, arguments);\n}\nfunction isNonContractWallet(_x8, _x9) {\n  return _isNonContractWallet.apply(this, arguments);\n}\nfunction _isNonContractWallet() {\n  _isNonContractWallet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(library, address) {\n    var code;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          if (!(!library || !address)) {\n            _context6.next = 2;\n            break;\n          }\n          return _context6.abrupt(\"return\", true);\n        case 2:\n          _context6.next = 4;\n          return library.getCode(address);\n        case 4:\n          code = _context6.sent;\n          return _context6.abrupt(\"return\", code === '0x');\n        case 6:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return _isNonContractWallet.apply(this, arguments);\n}\nvar isDroppedAndReplaced = function isDroppedAndReplaced(e) {\n  return (e === null || e === void 0 ? void 0 : e.code) === errors.TRANSACTION_REPLACED && (e === null || e === void 0 ? void 0 : e.replacement) && ((e === null || e === void 0 ? void 0 : e.reason) === 'repriced' || (e === null || e === void 0 ? void 0 : e.cancelled) === false);\n};\nexport function usePromiseTransaction(chainId, options) {\n  var _useState = useState({\n      status: 'None',\n      transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var _useTransactionsConte = useTransactionsContext(),\n    addTransaction = _useTransactionsConte.addTransaction,\n    updateTransaction = _useTransactionsConte.updateTransaction;\n  var _useNotificationsCont = useNotificationsContext(),\n    addNotification = _useNotificationsCont.addNotification;\n  var _useEthers = useEthers(),\n    library = _useEthers.library,\n    account = _useEthers.account;\n  var gnosisSafe = useGnosisSafeContract(account, library);\n  var resetState = useCallback(function () {\n    setState(function (_ref) {\n      var transactionName = _ref.transactionName;\n      return {\n        status: 'None',\n        transactionName: transactionName\n      };\n    });\n  }, [setState]);\n  var promiseTransaction = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(transactionPromise) {\n      var _ref3,\n        safeTransaction,\n        transactionRequest,\n        _a,\n        _b,\n        _c,\n        _d,\n        _e,\n        _f,\n        _g,\n        _h,\n        _j,\n        _k,\n        _l,\n        _m,\n        _o,\n        _p,\n        _q,\n        _r,\n        _s,\n        _t,\n        _u,\n        _v,\n        _w,\n        handleNonContractWallet,\n        handleContractWallet,\n        transaction,\n        isContractWallet,\n        result,\n        _result,\n        parsedErrorCode,\n        errorCode,\n        errorHash,\n        errorMessage,\n        droppedAndReplaced,\n        status,\n        type,\n        _args3 = arguments;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _ref3 = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {}, safeTransaction = _ref3.safeTransaction;\n            transactionRequest = _args3.length > 2 ? _args3[2] : undefined;\n            handleNonContractWallet = /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(transaction) {\n                var receipt;\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      if (chainId) {\n                        _context.next = 2;\n                        break;\n                      }\n                      return _context.abrupt(\"return\");\n                    case 2:\n                      setState(function (_ref5) {\n                        var transactionName = _ref5.transactionName;\n                        return {\n                          transactionName: transactionName,\n                          transaction: transaction,\n                          status: 'Mining'\n                        };\n                      });\n                      addTransaction({\n                        transaction: Object.assign(Object.assign({}, transaction), {\n                          chainId: chainId\n                        }),\n                        submittedAt: Date.now(),\n                        transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                      });\n                      _context.next = 6;\n                      return transaction.wait();\n                    case 6:\n                      receipt = _context.sent;\n                      updateTransaction({\n                        transaction: Object.assign(Object.assign({}, transaction), {\n                          chainId: chainId\n                        }),\n                        receipt: receipt,\n                        transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                      });\n                      setState({\n                        receipt: receipt,\n                        transaction: transaction,\n                        status: 'Success',\n                        chainId: chainId,\n                        transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                      });\n                      return _context.abrupt(\"return\", {\n                        transaction: transaction,\n                        receipt: receipt\n                      });\n                    case 10:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }, _callee);\n              }));\n              return function handleNonContractWallet(_x11) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n            handleContractWallet = /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(transactionPromise) {\n                var _ref7,\n                  safeTransaction,\n                  _a,\n                  gnosisSafeContract,\n                  latestNonce,\n                  safeTx,\n                  _yield$waitForSafeTra,\n                  transaction,\n                  receipt,\n                  rejected,\n                  errorMessage,\n                  _args2 = arguments;\n                return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                  while (1) switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _ref7 = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {}, safeTransaction = _ref7.safeTransaction;\n                      if (!(!chainId || !library || !account)) {\n                        _context2.next = 3;\n                        break;\n                      }\n                      return _context2.abrupt(\"return\");\n                    case 3:\n                      setState({\n                        status: 'CollectingSignaturePool',\n                        chainId: chainId,\n                        transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                      });\n                      gnosisSafeContract = gnosisSafe.get();\n                      if (gnosisSafeContract) {\n                        _context2.next = 7;\n                        break;\n                      }\n                      throw new Error(\"Couldn't create Gnosis Safe contract instance\");\n                    case 7:\n                      _context2.next = 9;\n                      return getLatestNonce(chainId, account);\n                    case 9:\n                      latestNonce = _context2.sent;\n                      _context2.t0 = buildSafeTransaction;\n                      _context2.t1 = (_a = safeTransaction === null || safeTransaction === void 0 ? void 0 : safeTransaction.to) !== null && _a !== void 0 ? _a : '';\n                      _context2.t2 = safeTransaction === null || safeTransaction === void 0 ? void 0 : safeTransaction.value;\n                      _context2.t3 = safeTransaction === null || safeTransaction === void 0 ? void 0 : safeTransaction.data;\n                      _context2.t4 = safeTransaction === null || safeTransaction === void 0 ? void 0 : safeTransaction.safeTxGas;\n                      if (!latestNonce) {\n                        _context2.next = 19;\n                        break;\n                      }\n                      _context2.t5 = latestNonce + 1;\n                      _context2.next = 22;\n                      break;\n                    case 19:\n                      _context2.next = 21;\n                      return gnosisSafeContract.nonce();\n                    case 21:\n                      _context2.t5 = _context2.sent;\n                    case 22:\n                      _context2.t6 = _context2.t5;\n                      _context2.t7 = {\n                        to: _context2.t1,\n                        value: _context2.t2,\n                        data: _context2.t3,\n                        safeTxGas: _context2.t4,\n                        nonce: _context2.t6\n                      };\n                      safeTx = (0, _context2.t0)(_context2.t7);\n                      _context2.next = 27;\n                      return waitForSafeTransaction(transactionPromise, gnosisSafeContract, chainId, safeTx);\n                    case 27:\n                      _yield$waitForSafeTra = _context2.sent;\n                      transaction = _yield$waitForSafeTra.transaction;\n                      receipt = _yield$waitForSafeTra.receipt;\n                      rejected = _yield$waitForSafeTra.rejected;\n                      if (rejected) {\n                        errorMessage = 'On-chain rejection created';\n                        addTransaction({\n                          transaction: Object.assign(Object.assign({}, transaction), {\n                            chainId: chainId\n                          }),\n                          receipt: receipt,\n                          submittedAt: Date.now(),\n                          transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                        });\n                        setState({\n                          status: 'Fail',\n                          transaction: transaction,\n                          receipt: receipt,\n                          errorMessage: errorMessage,\n                          chainId: chainId,\n                          transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                        });\n                      } else {\n                        addTransaction({\n                          transaction: Object.assign(Object.assign({}, transaction), {\n                            chainId: chainId\n                          }),\n                          receipt: receipt,\n                          submittedAt: Date.now(),\n                          transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                        });\n                        setState({\n                          receipt: receipt,\n                          transaction: transaction,\n                          status: 'Success',\n                          chainId: chainId,\n                          transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                        });\n                      }\n                      return _context2.abrupt(\"return\", {\n                        transaction: transaction,\n                        receipt: receipt\n                      });\n                    case 33:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }, _callee2);\n              }));\n              return function handleContractWallet(_x12) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n            if (chainId) {\n              _context3.next = 6;\n              break;\n            }\n            return _context3.abrupt(\"return\");\n          case 6:\n            transaction = undefined;\n            _context3.prev = 7;\n            setState({\n              status: 'PendingSignature',\n              chainId: chainId,\n              transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n            });\n            if (options === null || options === void 0 ? void 0 : options.enablePendingSignatureNotification) {\n              addNotification({\n                notification: {\n                  type: 'transactionPendingSignature',\n                  submittedAt: Date.now(),\n                  transactionName: options === null || options === void 0 ? void 0 : options.transactionName,\n                  transactionRequest: transactionRequest\n                },\n                chainId: chainId\n              });\n            }\n            _context3.next = 12;\n            return isNonContractWallet(library, account);\n          case 12:\n            isContractWallet = !_context3.sent;\n            if (!isContractWallet) {\n              _context3.next = 21;\n              break;\n            }\n            _context3.next = 16;\n            return handleContractWallet(transactionPromise, {\n              safeTransaction: safeTransaction\n            });\n          case 16:\n            result = _context3.sent;\n            transaction = result === null || result === void 0 ? void 0 : result.transaction;\n            return _context3.abrupt(\"return\", result === null || result === void 0 ? void 0 : result.receipt);\n          case 21:\n            _context3.next = 23;\n            return transactionPromise;\n          case 23:\n            transaction = _context3.sent;\n            _context3.next = 26;\n            return handleNonContractWallet(transaction);\n          case 26:\n            _result = _context3.sent;\n            transaction = _result === null || _result === void 0 ? void 0 : _result.transaction;\n            return _context3.abrupt(\"return\", _result === null || _result === void 0 ? void 0 : _result.receipt);\n          case 29:\n            _context3.next = 39;\n            break;\n          case 31:\n            _context3.prev = 31;\n            _context3.t0 = _context3[\"catch\"](7);\n            parsedErrorCode = parseInt((_g = (_e = (_c = (_b = (_a = _context3.t0.error) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.code) !== null && _c !== void 0 ? _c : (_d = _context3.t0.error) === null || _d === void 0 ? void 0 : _d.code) !== null && _e !== void 0 ? _e : (_f = _context3.t0.data) === null || _f === void 0 ? void 0 : _f.code) !== null && _g !== void 0 ? _g : _context3.t0.code);\n            errorCode = isNaN(parsedErrorCode) ? undefined : parsedErrorCode;\n            errorHash = (_l = (_k = (_j = (_h = _context3.t0 === null || _context3.t0 === void 0 ? void 0 : _context3.t0.error) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.originalError) === null || _k === void 0 ? void 0 : _k.data) !== null && _l !== void 0 ? _l : (_m = _context3.t0 === null || _context3.t0 === void 0 ? void 0 : _context3.t0.error) === null || _m === void 0 ? void 0 : _m.data;\n            errorMessage = (_v = (_t = (_s = (_q = (_p = (_o = _context3.t0.error) === null || _o === void 0 ? void 0 : _o.data) === null || _p === void 0 ? void 0 : _p.message) !== null && _q !== void 0 ? _q : (_r = _context3.t0.error) === null || _r === void 0 ? void 0 : _r.message) !== null && _s !== void 0 ? _s : _context3.t0.reason) !== null && _t !== void 0 ? _t : (_u = _context3.t0.data) === null || _u === void 0 ? void 0 : _u.message) !== null && _v !== void 0 ? _v : _context3.t0.message;\n            if (transaction) {\n              droppedAndReplaced = isDroppedAndReplaced(_context3.t0);\n              if (droppedAndReplaced) {\n                status = _context3.t0.receipt.status === 0 ? 'Fail' : 'Success';\n                type = status === 'Fail' ? 'transactionFailed' : 'transactionSucceed';\n                addNotification({\n                  notification: {\n                    type: type,\n                    submittedAt: Date.now(),\n                    transaction: _context3.t0.replacement,\n                    receipt: _context3.t0.receipt,\n                    transactionName: (_w = _context3.t0.replacement) === null || _w === void 0 ? void 0 : _w.transactionName,\n                    originalTransaction: transaction\n                  },\n                  chainId: chainId\n                });\n                setState(function (prevState) {\n                  var _a;\n                  return Object.assign(Object.assign({}, prevState), {\n                    status: status,\n                    transaction: _context3.t0.replacement,\n                    originalTransaction: transaction,\n                    receipt: _context3.t0.receipt,\n                    transactionName: (_a = _context3.t0.replacement) === null || _a === void 0 ? void 0 : _a.transactionName,\n                    errorMessage: errorMessage,\n                    errorCode: errorCode,\n                    errorHash: errorHash,\n                    chainId: chainId\n                  });\n                });\n              } else {\n                setState({\n                  status: 'Fail',\n                  transaction: transaction,\n                  receipt: _context3.t0.receipt,\n                  errorMessage: errorMessage,\n                  errorCode: errorCode,\n                  errorHash: errorHash,\n                  chainId: chainId,\n                  transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n                });\n              }\n            } else {\n              setState({\n                status: 'Exception',\n                errorMessage: errorMessage,\n                errorCode: errorCode,\n                errorHash: errorHash,\n                chainId: chainId,\n                transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n              });\n            }\n            return _context3.abrupt(\"return\", undefined);\n          case 39:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[7, 31]]);\n    }));\n    return function (_x10) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [chainId, addNotification, options === null || options === void 0 ? void 0 : options.transactionName, library, account]);\n  return {\n    promiseTransaction: promiseTransaction,\n    state: state,\n    resetState: resetState\n  };\n}","map":{"version":3,"sources":["../../../../src/hooks/usePromiseTransaction.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { useCallback, useState } from 'react';\nimport { useNotificationsContext, useTransactionsContext } from '../providers';\nimport { BigNumber, errors } from 'ethers';\nimport { buildSafeTransaction, getLatestNonce } from '../helpers/gnosisSafeUtils';\nimport { useEthers } from './useEthers';\nimport { waitForSafeTransaction } from '../helpers/gnosisSafeUtils';\nimport { useGnosisSafeContract } from './useGnosisSafeContract';\n/**\n * @internal\n */\nexport async function estimateTransactionGasLimit(transactionRequest, signer, gasLimitBufferPercentage) {\n    if (!signer || !transactionRequest) {\n        return undefined;\n    }\n    try {\n        const estimatedGas = transactionRequest.gasLimit\n            ? BigNumber.from(transactionRequest.gasLimit)\n            : await signer.estimateGas(transactionRequest);\n        return estimatedGas === null || estimatedGas === void 0 ? void 0 : estimatedGas.mul(gasLimitBufferPercentage + 100).div(100);\n    }\n    catch (err) {\n        console.error(err);\n        return undefined;\n    }\n}\n/**\n * @internal\n */\nexport async function estimateContractFunctionGasLimit(contractWithSigner, functionName, args, gasLimitBufferPercentage) {\n    try {\n        const estimatedGas = await contractWithSigner.estimateGas[functionName](...args);\n        const gasLimit = estimatedGas === null || estimatedGas === void 0 ? void 0 : estimatedGas.mul(gasLimitBufferPercentage + 100).div(100);\n        return gasLimit;\n    }\n    catch (err) {\n        console.error(err);\n        return undefined;\n    }\n}\n/**\n * @internal\n */\nasync function isNonContractWallet(library, address) {\n    if (!library || !address) {\n        return true;\n    }\n    const code = await library.getCode(address);\n    return code === '0x';\n}\nconst isDroppedAndReplaced = (e) => (e === null || e === void 0 ? void 0 : e.code) === errors.TRANSACTION_REPLACED && (e === null || e === void 0 ? void 0 : e.replacement) && ((e === null || e === void 0 ? void 0 : e.reason) === 'repriced' || (e === null || e === void 0 ? void 0 : e.cancelled) === false);\nexport function usePromiseTransaction(chainId, options) {\n    const [state, setState] = useState({ status: 'None', transactionName: options === null || options === void 0 ? void 0 : options.transactionName });\n    const { addTransaction, updateTransaction } = useTransactionsContext();\n    const { addNotification } = useNotificationsContext();\n    const { library, account } = useEthers();\n    const gnosisSafe = useGnosisSafeContract(account, library);\n    const resetState = useCallback(() => {\n        setState(({ transactionName }) => ({ status: 'None', transactionName }));\n    }, [setState]);\n    const promiseTransaction = useCallback(async (transactionPromise, { safeTransaction } = {}, transactionRequest) => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w;\n        const handleNonContractWallet = async (transaction) => {\n            if (!chainId)\n                return;\n            setState(({ transactionName }) => ({ transactionName, transaction, status: 'Mining' }));\n            addTransaction({\n                transaction: Object.assign(Object.assign({}, transaction), { chainId }),\n                submittedAt: Date.now(),\n                transactionName: options === null || options === void 0 ? void 0 : options.transactionName,\n            });\n            const receipt = await transaction.wait();\n            updateTransaction({\n                transaction: Object.assign(Object.assign({}, transaction), { chainId: chainId }),\n                receipt,\n                transactionName: options === null || options === void 0 ? void 0 : options.transactionName,\n            });\n            setState({\n                receipt,\n                transaction,\n                status: 'Success',\n                chainId,\n                transactionName: options === null || options === void 0 ? void 0 : options.transactionName,\n            });\n            return { transaction, receipt };\n        };\n        const handleContractWallet = async (transactionPromise, { safeTransaction } = {}) => {\n            var _a;\n            if (!chainId || !library || !account)\n                return;\n            setState({ status: 'CollectingSignaturePool', chainId, transactionName: options === null || options === void 0 ? void 0 : options.transactionName });\n            const gnosisSafeContract = gnosisSafe.get();\n            if (!gnosisSafeContract) {\n                throw new Error(\"Couldn't create Gnosis Safe contract instance\");\n            }\n            const latestNonce = await getLatestNonce(chainId, account);\n            const safeTx = buildSafeTransaction({\n                to: (_a = safeTransaction === null || safeTransaction === void 0 ? void 0 : safeTransaction.to) !== null && _a !== void 0 ? _a : '',\n                value: safeTransaction === null || safeTransaction === void 0 ? void 0 : safeTransaction.value,\n                data: safeTransaction === null || safeTransaction === void 0 ? void 0 : safeTransaction.data,\n                safeTxGas: safeTransaction === null || safeTransaction === void 0 ? void 0 : safeTransaction.safeTxGas,\n                nonce: latestNonce ? latestNonce + 1 : await gnosisSafeContract.nonce(),\n            });\n            const { transaction, receipt, rejected } = await waitForSafeTransaction(transactionPromise, gnosisSafeContract, chainId, safeTx);\n            if (rejected) {\n                const errorMessage = 'On-chain rejection created';\n                addTransaction({\n                    transaction: Object.assign(Object.assign({}, transaction), { chainId: chainId }),\n                    receipt,\n                    submittedAt: Date.now(),\n                    transactionName: options === null || options === void 0 ? void 0 : options.transactionName,\n                });\n                setState({\n                    status: 'Fail',\n                    transaction,\n                    receipt,\n                    errorMessage,\n                    chainId,\n                    transactionName: options === null || options === void 0 ? void 0 : options.transactionName,\n                });\n            }\n            else {\n                addTransaction({\n                    transaction: Object.assign(Object.assign({}, transaction), { chainId: chainId }),\n                    receipt,\n                    submittedAt: Date.now(),\n                    transactionName: options === null || options === void 0 ? void 0 : options.transactionName,\n                });\n                setState({\n                    receipt,\n                    transaction,\n                    status: 'Success',\n                    chainId,\n                    transactionName: options === null || options === void 0 ? void 0 : options.transactionName,\n                });\n            }\n            return { transaction, receipt };\n        };\n        if (!chainId)\n            return;\n        let transaction = undefined;\n        try {\n            setState({ status: 'PendingSignature', chainId, transactionName: options === null || options === void 0 ? void 0 : options.transactionName });\n            if (options === null || options === void 0 ? void 0 : options.enablePendingSignatureNotification) {\n                addNotification({\n                    notification: {\n                        type: 'transactionPendingSignature',\n                        submittedAt: Date.now(),\n                        transactionName: options === null || options === void 0 ? void 0 : options.transactionName,\n                        transactionRequest,\n                    },\n                    chainId: chainId,\n                });\n            }\n            const isContractWallet = !(await isNonContractWallet(library, account));\n            if (isContractWallet) {\n                const result = await handleContractWallet(transactionPromise, { safeTransaction });\n                transaction = result === null || result === void 0 ? void 0 : result.transaction;\n                return result === null || result === void 0 ? void 0 : result.receipt;\n            }\n            else {\n                transaction = await transactionPromise;\n                const result = await handleNonContractWallet(transaction);\n                transaction = result === null || result === void 0 ? void 0 : result.transaction;\n                return result === null || result === void 0 ? void 0 : result.receipt;\n            }\n        }\n        catch (e) {\n            const parsedErrorCode = parseInt((_g = (_e = (_c = (_b = (_a = e.error) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.code) !== null && _c !== void 0 ? _c : (_d = e.error) === null || _d === void 0 ? void 0 : _d.code) !== null && _e !== void 0 ? _e : (_f = e.data) === null || _f === void 0 ? void 0 : _f.code) !== null && _g !== void 0 ? _g : e.code);\n            const errorCode = isNaN(parsedErrorCode) ? undefined : parsedErrorCode;\n            const errorHash = (_l = (_k = (_j = (_h = e === null || e === void 0 ? void 0 : e.error) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.originalError) === null || _k === void 0 ? void 0 : _k.data) !== null && _l !== void 0 ? _l : (_m = e === null || e === void 0 ? void 0 : e.error) === null || _m === void 0 ? void 0 : _m.data;\n            const errorMessage = (_v = (_t = (_s = (_q = (_p = (_o = e.error) === null || _o === void 0 ? void 0 : _o.data) === null || _p === void 0 ? void 0 : _p.message) !== null && _q !== void 0 ? _q : (_r = e.error) === null || _r === void 0 ? void 0 : _r.message) !== null && _s !== void 0 ? _s : e.reason) !== null && _t !== void 0 ? _t : (_u = e.data) === null || _u === void 0 ? void 0 : _u.message) !== null && _v !== void 0 ? _v : e.message;\n            if (transaction) {\n                const droppedAndReplaced = isDroppedAndReplaced(e);\n                if (droppedAndReplaced) {\n                    const status = e.receipt.status === 0 ? 'Fail' : 'Success';\n                    const type = status === 'Fail' ? 'transactionFailed' : 'transactionSucceed';\n                    addNotification({\n                        notification: {\n                            type,\n                            submittedAt: Date.now(),\n                            transaction: e.replacement,\n                            receipt: e.receipt,\n                            transactionName: (_w = e.replacement) === null || _w === void 0 ? void 0 : _w.transactionName,\n                            originalTransaction: transaction,\n                        },\n                        chainId,\n                    });\n                    setState((prevState) => {\n                        var _a;\n                        return (Object.assign(Object.assign({}, prevState), { status, transaction: e.replacement, originalTransaction: transaction, receipt: e.receipt, transactionName: (_a = e.replacement) === null || _a === void 0 ? void 0 : _a.transactionName, errorMessage,\n                            errorCode,\n                            errorHash,\n                            chainId }));\n                    });\n                }\n                else {\n                    setState({\n                        status: 'Fail',\n                        transaction,\n                        receipt: e.receipt,\n                        errorMessage,\n                        errorCode,\n                        errorHash,\n                        chainId,\n                        transactionName: options === null || options === void 0 ? void 0 : options.transactionName,\n                    });\n                }\n            }\n            else {\n                setState({\n                    status: 'Exception',\n                    errorMessage,\n                    errorCode,\n                    errorHash,\n                    chainId,\n                    transactionName: options === null || options === void 0 ? void 0 : options.transactionName,\n                });\n            }\n            return undefined;\n        }\n    }, [chainId, addNotification, options === null || options === void 0 ? void 0 : options.transactionName, library, account]);\n    return { promiseTransaction, state, resetState };\n}\n//# sourceMappingURL=usePromiseTransaction.js.map"]},"metadata":{},"sourceType":"module"}