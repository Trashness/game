{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { proxy as u, subscribe as f } from \"valtio/vanilla\";\nimport { Buffer as U } from \"buffer\";\nvar L;\nvar p = {\n    ethereumClient: void 0,\n    setEthereumClient: function setEthereumClient(e) {\n      L = e;\n    },\n    client: function client() {\n      if (L) return L;\n      throw new Error(\"ClientCtrl has no client set\");\n    }\n  },\n  o = u({\n    address: void 0,\n    profileName: void 0,\n    profileAvatar: void 0,\n    profileLoading: !1,\n    balanceLoading: !1,\n    balance: void 0,\n    isConnected: !1\n  }),\n  A = {\n    state: o,\n    subscribe: function subscribe(e) {\n      return f(o, function () {\n        return e(o);\n      });\n    },\n    getAccount: function getAccount() {\n      var e = p.client().getAccount();\n      o.address = e.address, o.isConnected = e.isConnected;\n    },\n    fetchProfile: function fetchProfile(e, t) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var n, _p$client$getDefaultC, a, _yield$Promise$all, _yield$Promise$all2, l, c;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              o.profileLoading = !0;\n              n = t !== null && t !== void 0 ? t : o.address, _p$client$getDefaultC = p.client().getDefaultChain(), a = _p$client$getDefaultC.id;\n              if (!(n && a === 1)) {\n                _context.next = 16;\n                break;\n              }\n              _context.next = 6;\n              return Promise.all([p.client().fetchEnsName({\n                address: n,\n                chainId: 1\n              }), p.client().fetchEnsAvatar({\n                address: n,\n                chainId: 1\n              })]);\n            case 6:\n              _yield$Promise$all = _context.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              l = _yield$Promise$all2[0];\n              c = _yield$Promise$all2[1];\n              _context.t0 = c;\n              if (!_context.t0) {\n                _context.next = 14;\n                break;\n              }\n              _context.next = 14;\n              return e(c);\n            case 14:\n              o.profileName = l;\n              o.profileAvatar = c;\n            case 16:\n              _context.prev = 16;\n              o.profileLoading = !1;\n              return _context.finish(16);\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0,, 16, 19]]);\n      }))();\n    },\n    fetchBalance: function fetchBalance(e) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var t, n;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              o.balanceLoading = !0;\n              t = e !== null && e !== void 0 ? e : o.address;\n              if (!t) {\n                _context2.next = 8;\n                break;\n              }\n              _context2.next = 6;\n              return p.client().fetchBalance({\n                address: t\n              });\n            case 6:\n              n = _context2.sent;\n              o.balance = {\n                amount: n.formatted,\n                symbol: n.symbol\n              };\n            case 8:\n              _context2.prev = 8;\n              o.balanceLoading = !1;\n              return _context2.finish(8);\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0,, 8, 11]]);\n      }))();\n    },\n    setAddress: function setAddress(e) {\n      o.address = e;\n    },\n    setIsConnected: function setIsConnected(e) {\n      o.isConnected = e;\n    },\n    resetBalance: function resetBalance() {\n      o.balance = void 0;\n    },\n    resetAccount: function resetAccount() {\n      o.address = void 0, o.isConnected = !1, o.profileName = void 0, o.profileAvatar = void 0, o.balance = void 0;\n    }\n  },\n  d = {\n    WALLETCONNECT_DEEPLINK_CHOICE: \"WALLETCONNECT_DEEPLINK_CHOICE\",\n    W3M_VERSION: \"W3M_VERSION\",\n    isMobile: function isMobile() {\n      return typeof window < \"u\" ? !!(window.matchMedia(\"(pointer:coarse)\").matches || /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/.test(navigator.userAgent)) : !1;\n    },\n    isAndroid: function isAndroid() {\n      return d.isMobile() && navigator.userAgent.toLowerCase().includes(\"android\");\n    },\n    isEmptyObject: function isEmptyObject(e) {\n      return Object.getPrototypeOf(e) === Object.prototype && Object.getOwnPropertyNames(e).length === 0 && Object.getOwnPropertySymbols(e).length === 0;\n    },\n    isHttpUrl: function isHttpUrl(e) {\n      return e.startsWith(\"http://\") || e.startsWith(\"https://\");\n    },\n    formatNativeUrl: function formatNativeUrl(e, t, n) {\n      if (d.isHttpUrl(e)) return this.formatUniversalUrl(e, t, n);\n      var a = e;\n      a.includes(\"://\") || (a = e.replaceAll(\"/\", \"\").replaceAll(\":\", \"\"), a = \"\".concat(a, \"://\")), this.setWalletConnectDeepLink(a, n);\n      var l = encodeURIComponent(t);\n      return \"\".concat(a, \"wc?uri=\").concat(l);\n    },\n    formatUniversalUrl: function formatUniversalUrl(e, t, n) {\n      if (!d.isHttpUrl(e)) return this.formatNativeUrl(e, t, n);\n      var a = e;\n      e.endsWith(\"/\") && (a = e.slice(0, -1)), this.setWalletConnectDeepLink(a, n);\n      var l = encodeURIComponent(t);\n      return \"\".concat(a, \"/wc?uri=\").concat(l);\n    },\n    wait: function wait(e) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", new Promise(function (t) {\n                setTimeout(t, e);\n              }));\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    },\n    openHref: function openHref(e, t) {\n      window.open(e, t, \"noreferrer noopener\");\n    },\n    setWalletConnectDeepLink: function setWalletConnectDeepLink(e, t) {\n      localStorage.setItem(d.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n        href: e,\n        name: t\n      }));\n    },\n    setWalletConnectAndroidDeepLink: function setWalletConnectAndroidDeepLink(e) {\n      var _e$split = e.split(\"?\"),\n        _e$split2 = _slicedToArray(_e$split, 1),\n        t = _e$split2[0];\n      localStorage.setItem(d.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n        href: t,\n        name: \"Android\"\n      }));\n    },\n    removeWalletConnectDeepLink: function removeWalletConnectDeepLink() {\n      localStorage.removeItem(d.WALLETCONNECT_DEEPLINK_CHOICE);\n    },\n    isNull: function isNull(e) {\n      return e === null;\n    },\n    setWeb3ModalVersionInStorage: function setWeb3ModalVersionInStorage() {\n      typeof localStorage < \"u\" && localStorage.setItem(d.W3M_VERSION, \"2.2.2\");\n    }\n  },\n  s = u({\n    selectedChain: void 0,\n    chains: void 0,\n    standaloneChains: void 0,\n    standaloneUri: void 0,\n    isStandalone: !1,\n    isCustomDesktop: !1,\n    isCustomMobile: !1,\n    isDataLoaded: !1,\n    isUiLoaded: !1,\n    walletConnectVersion: 1\n  }),\n  i = {\n    state: s,\n    subscribe: function subscribe(e) {\n      return f(s, function () {\n        return e(s);\n      });\n    },\n    setChains: function setChains(e) {\n      s.chains = e;\n    },\n    setStandaloneChains: function setStandaloneChains(e) {\n      s.standaloneChains = e;\n    },\n    setStandaloneUri: function setStandaloneUri(e) {\n      s.standaloneUri = e;\n    },\n    getSelectedChain: function getSelectedChain() {\n      var e = p.client().getNetwork().chain;\n      return e && (s.selectedChain = e), s.selectedChain;\n    },\n    setSelectedChain: function setSelectedChain(e) {\n      s.selectedChain = e;\n    },\n    setIsStandalone: function setIsStandalone(e) {\n      s.isStandalone = e;\n    },\n    setIsCustomDesktop: function setIsCustomDesktop(e) {\n      s.isCustomDesktop = e;\n    },\n    setIsCustomMobile: function setIsCustomMobile(e) {\n      s.isCustomMobile = e;\n    },\n    setIsDataLoaded: function setIsDataLoaded(e) {\n      s.isDataLoaded = e;\n    },\n    setIsUiLoaded: function setIsUiLoaded(e) {\n      s.isUiLoaded = e;\n    },\n    setWalletConnectVersion: function setWalletConnectVersion(e) {\n      s.walletConnectVersion = e;\n    }\n  },\n  b = u({\n    projectId: \"\",\n    mobileWallets: void 0,\n    desktopWallets: void 0,\n    walletImages: void 0,\n    chainImages: void 0,\n    tokenImages: void 0,\n    standaloneChains: void 0,\n    enableStandaloneMode: !1,\n    enableNetworkView: !1,\n    enableAccountView: !0,\n    enableExplorer: !0,\n    defaultChain: void 0,\n    explorerAllowList: void 0,\n    explorerDenyList: void 0,\n    termsOfServiceUrl: void 0,\n    privacyPolicyUrl: void 0\n  }),\n  S = {\n    state: b,\n    subscribe: function subscribe(e) {\n      return f(b, function () {\n        return e(b);\n      });\n    },\n    setConfig: function setConfig(e) {\n      var t, n, a, l;\n      if (i.setStandaloneChains(e.standaloneChains), i.setIsStandalone(!!((t = e.standaloneChains) != null && t.length) || !!e.enableStandaloneMode), i.setIsCustomMobile(!!((n = e.mobileWallets) != null && n.length)), i.setIsCustomDesktop(!!((a = e.desktopWallets) != null && a.length)), i.setWalletConnectVersion((l = e.walletConnectVersion) != null ? l : 1), !i.state.isStandalone) {\n        var c = p.client().getDefaultChain();\n        i.setSelectedChain(c), i.setChains(p.client().chains);\n      }\n      e.defaultChain && i.setSelectedChain(e.defaultChain), d.setWeb3ModalVersionInStorage(), Object.assign(b, e);\n    }\n  },\n  W = \"https://explorer-api.walletconnect.com\";\nfunction D(e) {\n  var t = Object.fromEntries(Object.entries(e).filter(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      n = _ref2[0],\n      a = _ref2[1];\n    return typeof a < \"u\" && a !== null && a !== \"\";\n  }).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      n = _ref4[0],\n      a = _ref4[1];\n    return [n, a.toString()];\n  }));\n  return new URLSearchParams(t).toString();\n}\nvar I = {\n    fetchWallets: function fetchWallets(e, t) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var n, a;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              n = D(t), a = \"\".concat(W, \"/v3/wallets?projectId=\").concat(e, \"&\").concat(n);\n              _context4.next = 3;\n              return fetch(a);\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent.json());\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    },\n    formatImageUrl: function formatImageUrl(e, t) {\n      return \"\".concat(W, \"/v3/logo/lg/\").concat(t, \"?projectId=\").concat(e);\n    }\n  },\n  h = u({\n    wallets: {\n      listings: [],\n      total: 0,\n      page: 1\n    },\n    search: {\n      listings: [],\n      total: 0,\n      page: 1\n    },\n    previewWallets: [],\n    recomendedWallets: []\n  });\nfunction y() {\n  var e = S.state.projectId;\n  if (!e) throw new Error(\"projectId is required to work with explorer api\");\n  return e;\n}\nvar _ = {\n    state: h,\n    getPreviewWallets: function getPreviewWallets(e) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _yield$I$fetchWallets, t;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return I.fetchWallets(y(), e);\n            case 2:\n              _yield$I$fetchWallets = _context5.sent;\n              t = _yield$I$fetchWallets.listings;\n              return _context5.abrupt(\"return\", (h.previewWallets = Object.values(t), h.previewWallets));\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }))();\n    },\n    getRecomendedWallets: function getRecomendedWallets() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var _yield$I$fetchWallets2, e;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return I.fetchWallets(y(), {\n                page: 1,\n                entries: 6\n              });\n            case 2:\n              _yield$I$fetchWallets2 = _context6.sent;\n              e = _yield$I$fetchWallets2.listings;\n              h.recomendedWallets = Object.values(e);\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }))();\n    },\n    getPaginatedWallets: function getPaginatedWallets(e) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var t, n, _yield$I$fetchWallets3, a, l, c, v;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              t = e.page;\n              n = e.search;\n              _context7.next = 4;\n              return I.fetchWallets(y(), e);\n            case 4:\n              _yield$I$fetchWallets3 = _context7.sent;\n              a = _yield$I$fetchWallets3.listings;\n              l = _yield$I$fetchWallets3.total;\n              c = Object.values(a);\n              v = n ? \"search\" : \"wallets\";\n              return _context7.abrupt(\"return\", (h[v] = {\n                listings: [].concat(_toConsumableArray(h[v].listings), c),\n                total: l,\n                page: t !== null && t !== void 0 ? t : 1\n              }, {\n                listings: c,\n                total: l\n              }));\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }))();\n    },\n    getImageUrl: function getImageUrl(e) {\n      return I.formatImageUrl(y(), e);\n    },\n    resetSearch: function resetSearch() {\n      h.search = {\n        listings: [],\n        total: 0,\n        page: 1\n      };\n    }\n  },\n  r = u({\n    history: [\"ConnectWallet\"],\n    view: \"ConnectWallet\",\n    data: void 0\n  }),\n  g = {\n    state: r,\n    subscribe: function subscribe(e) {\n      return f(r, function () {\n        return e(r);\n      });\n    },\n    push: function push(e, t) {\n      e !== r.view && (r.view = e, t && (r.data = t), r.history.push(e));\n    },\n    replace: function replace(e) {\n      r.view = e, r.history = [e];\n    },\n    goBack: function goBack() {\n      if (r.history.length > 1) {\n        r.history.pop();\n        var _r$history$slice = r.history.slice(-1),\n          _r$history$slice2 = _slicedToArray(_r$history$slice, 1),\n          e = _r$history$slice2[0];\n        r.view = e;\n      }\n    }\n  },\n  m = u({\n    open: !1\n  }),\n  x = {\n    state: m,\n    subscribe: function subscribe(e) {\n      return f(m, function () {\n        return e(m);\n      });\n    },\n    open: function open(e) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              return _context8.abrupt(\"return\", new Promise(function (t) {\n                var _i$state = i.state,\n                  n = _i$state.isStandalone,\n                  a = _i$state.isUiLoaded,\n                  l = _i$state.isDataLoaded,\n                  c = A.state.isConnected,\n                  v = S.state.enableNetworkView;\n                if (n ? (i.setStandaloneUri(e === null || e === void 0 ? void 0 : e.uri), i.setStandaloneChains(e === null || e === void 0 ? void 0 : e.standaloneChains), g.replace(\"ConnectWallet\")) : e != null && e.route ? g.replace(e.route) : c ? g.replace(\"Account\") : v ? g.replace(\"SelectNetwork\") : g.replace(\"ConnectWallet\"), a && l) m.open = !0, t();else {\n                  var N = setInterval(function () {\n                    i.state.isUiLoaded && i.state.isDataLoaded && (clearInterval(N), m.open = !0, t());\n                  }, 200);\n                }\n              }));\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }))();\n    },\n    close: function close() {\n      m.open = !1;\n    }\n  };\nvar P = Object.defineProperty,\n  E = Object.getOwnPropertySymbols,\n  j = Object.prototype.hasOwnProperty,\n  k = Object.prototype.propertyIsEnumerable,\n  O = function O(e, t, n) {\n    return t in e ? P(e, t, {\n      enumerable: !0,\n      configurable: !0,\n      writable: !0,\n      value: n\n    }) : e[t] = n;\n  },\n  M = function M(e, t) {\n    for (var n in t || (t = {})) j.call(t, n) && O(e, n, t[n]);\n    if (E) {\n      var _iterator = _createForOfIteratorHelper(E(t)),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var n = _step.value;\n          k.call(t, n) && O(e, n, t[n]);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n    return e;\n  };\nfunction $() {\n  return typeof matchMedia < \"u\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n}\nvar w = u({\n    themeMode: $() ? \"dark\" : \"light\"\n  }),\n  B = {\n    state: w,\n    subscribe: function subscribe(e) {\n      return f(w, function () {\n        return e(w);\n      });\n    },\n    setThemeConfig: function setThemeConfig(e) {\n      var t = e.themeMode,\n        n = e.themeVariables;\n      t && (w.themeMode = t), n && (w.themeVariables = M({}, n));\n    }\n  },\n  C = u({\n    open: !1,\n    message: \"\",\n    variant: \"success\"\n  }),\n  H = {\n    state: C,\n    subscribe: function subscribe(e) {\n      return f(C, function () {\n        return e(C);\n      });\n    },\n    openToast: function openToast(e, t) {\n      C.open = !0, C.message = e, C.variant = t;\n    },\n    closeToast: function closeToast() {\n      C.open = !1;\n    }\n  };\ntypeof window < \"u\" && (window.Buffer || (window.Buffer = U), window.global || (window.global = window), window.process || (window.process = {\n  env: {}\n}));\nexport { A as AccountCtrl, p as ClientCtrl, S as ConfigCtrl, d as CoreUtil, _ as ExplorerCtrl, x as ModalCtrl, i as OptionsCtrl, g as RouterCtrl, B as ThemeCtrl, H as ToastCtrl };","map":{"version":3,"sources":["../src/controllers/ClientCtrl.ts","../src/controllers/AccountCtrl.ts","../src/utils/CoreUtil.ts","../src/controllers/OptionsCtrl.ts","../src/controllers/ConfigCtrl.ts","../src/utils/ExplorerUtil.ts","../src/controllers/ExplorerCtrl.ts","../src/controllers/RouterCtrl.ts","../src/controllers/ModalCtrl.ts","../src/controllers/ThemeCtrl.ts","../src/controllers/ToastCtrl.ts","../src/utils/PolyfillUtil.ts"],"names":["client","ClientCtrl","ethereumClient","state","proxy","AccountCtrl","callback","valtioSub","account","preloadAvatarFn","profileAddress","address","id","name","avatar","balanceAddress","balance","isConnected","CoreUtil","value","url","appUrl","wcUri","safeAppUrl","encodedWcUrl","plainAppUrl","miliseconds","resolve","href","target","OptionsCtrl","chains","standaloneChains","standaloneUri","selectedChain","isStandalone","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","walletConnectVersion","ConfigCtrl","config","_a","_b","_c","_d","chain","EXPLORER_API","formatParams","params","stringParams","_","key","ExplorerUtil","projectId","urlParams","fetcUrl","imageId","getProjectId","ExplorerCtrl","listings","listingsObj","type","search","page","RouterCtrl","view","data","last","ModalCtrl","options","enableNetworkView","interval","isDarkMode","ThemeCtrl","theme","themeMode","themeVariables","__spreadValues","ToastCtrl","message","variant","Buffer"],"mappings":"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","sourcesContent":["import type { ClientCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nlet client: ClientCtrlState['ethereumClient'] = undefined\n\n// -- controller -- As function to enable correct ssr handling\nexport const ClientCtrl = {\n  ethereumClient: undefined,\n\n  setEthereumClient(ethereumClient: ClientCtrlState['ethereumClient']) {\n    client = ethereumClient\n  },\n\n  client() {\n    if (client) {\n      return client\n    }\n\n    throw new Error('ClientCtrl has no client set')\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { AccountCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<AccountCtrlState>({\n  address: undefined,\n  profileName: undefined,\n  profileAvatar: undefined,\n  profileLoading: false,\n  balanceLoading: false,\n  balance: undefined,\n  isConnected: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const AccountCtrl = {\n  state,\n\n  subscribe(callback: (newState: AccountCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  getAccount() {\n    const account = ClientCtrl.client().getAccount()\n    state.address = account.address\n    state.isConnected = account.isConnected\n  },\n\n  async fetchProfile(\n    preloadAvatarFn: (avatar: string) => Promise<unknown>,\n    profileAddress?: `0x${string}`\n  ) {\n    try {\n      state.profileLoading = true\n      const address = profileAddress ?? state.address\n      const { id } = ClientCtrl.client().getDefaultChain()\n      if (address && id === 1) {\n        const [name, avatar] = await Promise.all([\n          ClientCtrl.client().fetchEnsName({ address, chainId: 1 }),\n          ClientCtrl.client().fetchEnsAvatar({ address, chainId: 1 })\n        ])\n        if (avatar) {\n          await preloadAvatarFn(avatar)\n        }\n        state.profileName = name\n        state.profileAvatar = avatar\n      }\n    } finally {\n      state.profileLoading = false\n    }\n  },\n\n  async fetchBalance(balanceAddress?: `0x${string}`) {\n    try {\n      state.balanceLoading = true\n      const address = balanceAddress ?? state.address\n      if (address) {\n        const balance = await ClientCtrl.client().fetchBalance({ address })\n        state.balance = { amount: balance.formatted, symbol: balance.symbol }\n      }\n    } finally {\n      state.balanceLoading = false\n    }\n  },\n\n  setAddress(address: AccountCtrlState['address']) {\n    state.address = address\n  },\n\n  setIsConnected(isConnected: AccountCtrlState['isConnected']) {\n    state.isConnected = isConnected\n  },\n\n  resetBalance() {\n    state.balance = undefined\n  },\n\n  resetAccount() {\n    state.address = undefined\n    state.isConnected = false\n    state.profileName = undefined\n    state.profileAvatar = undefined\n    state.balance = undefined\n  }\n}\n","export const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  W3M_VERSION: 'W3M_VERSION',\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isEmptyObject(value: unknown) {\n    return (\n      Object.getPrototypeOf(value) === Object.prototype &&\n      Object.getOwnPropertyNames(value).length === 0 &&\n      Object.getOwnPropertySymbols(value).length === 0\n    )\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let plainAppUrl = appUrl\n    if (appUrl.endsWith('/')) {\n      plainAppUrl = appUrl.slice(0, -1)\n    }\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${plainAppUrl}/wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    const [href] = wcUri.split('?')\n\n    localStorage.setItem(\n      CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n      JSON.stringify({ href, name: 'Android' })\n    )\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n  },\n\n  isNull<T>(value: T | null): value is null {\n    return value === null\n  },\n\n  setWeb3ModalVersionInStorage() {\n    if (typeof localStorage !== 'undefined') {\n      localStorage.setItem(CoreUtil.W3M_VERSION, process.env.ROLLUP_W3M_VERSION ?? 'UNKNOWN')\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  selectedChain: undefined,\n  chains: undefined,\n  standaloneChains: undefined,\n  standaloneUri: undefined,\n  isStandalone: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false,\n  walletConnectVersion: 1\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains?: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setStandaloneChains(standaloneChains: OptionsCtrlState['standaloneChains']) {\n    state.standaloneChains = standaloneChains\n  },\n\n  setStandaloneUri(standaloneUri: OptionsCtrlState['standaloneUri']) {\n    state.standaloneUri = standaloneUri\n  },\n\n  getSelectedChain() {\n    const selectedChain = ClientCtrl.client().getNetwork().chain\n    if (selectedChain) {\n      state.selectedChain = selectedChain\n    }\n\n    return state.selectedChain\n  },\n\n  setSelectedChain(selectedChain: OptionsCtrlState['selectedChain']) {\n    state.selectedChain = selectedChain\n  },\n\n  setIsStandalone(isStandalone: OptionsCtrlState['isStandalone']) {\n    state.isStandalone = isStandalone\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setWalletConnectVersion(walletConnectVersion: OptionsCtrlState['walletConnectVersion']) {\n    state.walletConnectVersion = walletConnectVersion\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ClientCtrl } from './ClientCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chainImages: undefined,\n  tokenImages: undefined,\n  standaloneChains: undefined,\n  enableStandaloneMode: false,\n  enableNetworkView: false,\n  enableAccountView: true,\n  enableExplorer: true,\n  defaultChain: undefined,\n  explorerAllowList: undefined,\n  explorerDenyList: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    OptionsCtrl.setStandaloneChains(config.standaloneChains)\n    OptionsCtrl.setIsStandalone(\n      Boolean(config.standaloneChains?.length) || Boolean(config.enableStandaloneMode)\n    )\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n    OptionsCtrl.setWalletConnectVersion(config.walletConnectVersion ?? 1)\n\n    if (!OptionsCtrl.state.isStandalone) {\n      const chain = ClientCtrl.client().getDefaultChain()\n      OptionsCtrl.setSelectedChain(chain)\n      OptionsCtrl.setChains(ClientCtrl.client().chains)\n    }\n\n    if (config.defaultChain) {\n      OptionsCtrl.setSelectedChain(config.defaultChain)\n    }\n\n    CoreUtil.setWeb3ModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n","import type { ListingResponse, PageParams } from '../types/controllerTypes'\n\nconst EXPLORER_API = 'https://explorer-api.walletconnect.com'\n\nfunction formatParams(params: PageParams) {\n  const stringParams = Object.fromEntries(\n    Object.entries(params)\n      .filter(([_, value]) => typeof value !== 'undefined' && value !== null && value !== '')\n      .map(([key, value]) => [key, value.toString()])\n  )\n\n  return new URLSearchParams(stringParams).toString()\n}\n\nexport const ExplorerUtil = {\n  async fetchWallets(projectId: string, params: PageParams): Promise<ListingResponse> {\n    const urlParams = formatParams(params)\n    const fetcUrl = `${EXPLORER_API}/v3/wallets?projectId=${projectId}&${urlParams}`\n    const fetched = await fetch(fetcUrl)\n\n    return fetched.json()\n  },\n\n  formatImageUrl(projectId: string, imageId: string) {\n    return `${EXPLORER_API}/v3/logo/lg/${imageId}?projectId=${projectId}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, PageParams } from '../types/controllerTypes'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  previewWallets: [],\n  recomendedWallets: []\n})\n\n// -- helpers ------------------------------------------------------ //\nfunction getProjectId() {\n  const { projectId } = ConfigCtrl.state\n  if (!projectId) {\n    throw new Error('projectId is required to work with explorer api')\n  }\n\n  return projectId\n}\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getPreviewWallets(params: PageParams) {\n    const { listings } = await ExplorerUtil.fetchWallets(getProjectId(), params)\n    state.previewWallets = Object.values(listings)\n\n    return state.previewWallets\n  },\n\n  async getRecomendedWallets() {\n    const { listings } = await ExplorerUtil.fetchWallets(getProjectId(), { page: 1, entries: 6 })\n    state.recomendedWallets = Object.values(listings)\n  },\n\n  async getPaginatedWallets(params: PageParams) {\n    const { page, search } = params\n    const { listings: listingsObj, total } = await ExplorerUtil.fetchWallets(getProjectId(), params)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getImageUrl(imageId: string) {\n    return ExplorerUtil.formatImageUrl(getProjectId(), imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { AccountCtrl } from './AccountCtrl'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri?: string\n  standaloneChains?: string[]\n  route?: 'Account' | 'ConnectWallet' | 'Help' | 'SelectNetwork'\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isStandalone, isUiLoaded, isDataLoaded } = OptionsCtrl.state\n      const { isConnected } = AccountCtrl.state\n      const { enableNetworkView } = ConfigCtrl.state\n\n      if (isStandalone) {\n        OptionsCtrl.setStandaloneUri(options?.uri)\n        OptionsCtrl.setStandaloneChains(options?.standaloneChains)\n        RouterCtrl.replace('ConnectWallet')\n      } else if (options?.route) {\n        RouterCtrl.replace(options.route)\n      } else if (isConnected) {\n        RouterCtrl.replace('Account')\n      } else if (enableNetworkView) {\n        RouterCtrl.replace('SelectNetwork')\n      } else {\n        RouterCtrl.replace('ConnectWallet')\n      }\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          if (OptionsCtrl.state.isUiLoaded && OptionsCtrl.state.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { Buffer } from 'buffer'\n\nif (typeof window !== 'undefined') {\n  if (!window.Buffer) {\n    window.Buffer = Buffer\n  }\n  if (!window.global) {\n    window.global = window\n  }\n  if (!window.process) {\n    // @ts-expect-error minimal process\n    window.process = { env: {} }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}