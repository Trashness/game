{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"scopes\", \"imports\", \"resolvers\", \"deps\", \"scope\"];\nimport { useDecorators } from \"@tsed/core\";\nimport { ProviderScope } from \"../domain/ProviderScope.js\";\nimport { Configuration } from \"./configuration.js\";\nimport { Injectable } from \"./injectable.js\";\nimport { ProviderType } from \"../domain/ProviderType.js\";\n/**\n * Declare a new Ts.ED module\n *\n * ## Options\n * - imports: List of Provider which must be built by injector before invoking the module\n * - resolvers: List of external DI must be used to resolve unknown provider\n * - deps: List of provider must be injected to the module constructor (explicit declaration)\n *\n * @param options\n * @decorator\n */\nexport function Module() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var scopes = options.scopes,\n    imports = options.imports,\n    resolvers = options.resolvers,\n    deps = options.deps,\n    scope = options.scope,\n    configuration = _objectWithoutProperties(options, _excluded);\n  return useDecorators(Configuration(configuration), Injectable({\n    type: ProviderType.MODULE,\n    scope: ProviderScope.SINGLETON,\n    imports: imports,\n    deps: deps,\n    injectable: false,\n    resolvers: resolvers\n  }));\n}","map":{"version":3,"sources":["../../../src/decorators/module.ts"],"names":[],"mappings":";;AAAA,SAAQ,aAAa,QAAO,YAAY;AACxC,SAAQ,aAAa,QAAO,4BAA0B;AAEtD,SAAQ,aAAa,QAAO,oBAAkB;AAC9C,SAAQ,UAAU,QAAO,iBAAe;AACxC,SAAQ,YAAY,QAAO,2BAAyB;AA2BpD;;;;;;;;;;AAUG;AACH,OAAM,SAAU,MAAM,CAAA,EAAqC;EAAA,IAApC,OAAA,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAkC,CAAA,CAAE;EACzD,IAAO,MAAM,GAAuD,OAAO,CAApE,MAAM;IAAE,OAAO,GAA8C,OAAO,CAA5D,OAAO;IAAE,SAAS,GAAmC,OAAO,CAAnD,SAAS;IAAE,IAAI,GAA6B,OAAO,CAAxC,IAAI;IAAE,KAAK,GAAsB,OAAO,CAAlC,KAAK;IAAK,aAAa,GAAA,wBAAA,CAAI,OAAO,EAAA,SAAA;EAE3E,OAAO,aAAa,CAClB,aAAa,CAAC,aAAa,CAAC,EAC5B,UAAU,CAAC;IACT,IAAI,EAAE,YAAY,CAAC,MAAM;IACzB,KAAK,EAAE,aAAa,CAAC,SAAS;IAC9B,OAAO,EAAP,OAAO;IACP,IAAI,EAAJ,IAAI;IACJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAT;GACD,CAAC,CACH;AACH","sourceRoot":"","sourcesContent":["import { useDecorators } from \"@tsed/core\";\nimport { ProviderScope } from \"../domain/ProviderScope.js\";\nimport { Configuration } from \"./configuration.js\";\nimport { Injectable } from \"./injectable.js\";\nimport { ProviderType } from \"../domain/ProviderType.js\";\n/**\n * Declare a new Ts.ED module\n *\n * ## Options\n * - imports: List of Provider which must be built by injector before invoking the module\n * - resolvers: List of external DI must be used to resolve unknown provider\n * - deps: List of provider must be injected to the module constructor (explicit declaration)\n *\n * @param options\n * @decorator\n */\nexport function Module(options = {}) {\n    const { scopes, imports, resolvers, deps, scope, ...configuration } = options;\n    return useDecorators(Configuration(configuration), Injectable({\n        type: ProviderType.MODULE,\n        scope: ProviderScope.SINGLETON,\n        imports,\n        deps,\n        injectable: false,\n        resolvers\n    }));\n}\n//# sourceMappingURL=module.js.map"]},"metadata":{},"sourceType":"module"}