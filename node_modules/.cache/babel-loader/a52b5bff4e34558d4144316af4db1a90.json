{"ast":null,"code":"import _defineProperty from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Store } from \"@tsed/core\";\nimport { INJECTABLE_PROP } from \"../constants/constants.js\";\nimport { InjectablePropertyType } from \"../domain/InjectablePropertyType.js\";\n/**\n * Return value from Configuration.\n *\n * ## Example\n *\n * ```typescript\n * import {Env} from \"@tsed/core\";\n * import {Constant, Value} from \"@tsed/di\";\n *\n * export class MyClass {\n *\n *    @Constant(\"env\")\n *    env: Env;\n *\n *    @Value(\"swagger.path\")\n *    swaggerPath: string;\n *\n *    @Value(\"swagger.path\", \"defaultValue\")\n *    swaggerPath: string;\n *\n *    constructor() {\n *       console.log(this.swaggerPath) // undefined. Not available on constructor\n *    }\n *\n *    $onInit() {\n *      console.log(this.swaggerPath)  // something\n *    }\n * }\n * ```\n *\n * @param {string} expression\n * @param defaultValue\n * @returns {(targetClass: any, attributeName: string) => any}\n * @decorator\n */\nexport function Constant(expression, defaultValue) {\n  return function (target, propertyKey) {\n    Store.from(target).merge(INJECTABLE_PROP, _defineProperty({}, propertyKey, {\n      bindingType: InjectablePropertyType.CONSTANT,\n      propertyKey: propertyKey,\n      expression: expression,\n      defaultValue: defaultValue\n    }));\n  };\n}","map":{"version":3,"sources":["../../../src/decorators/constant.ts"],"names":[],"mappings":";AAAA,SAAQ,KAAK,QAAO,YAAY;AAChC,SAAQ,eAAe,QAAO,2BAAyB;AAEvD,SAAQ,sBAAsB,QAAO,qCAAmC;AAExE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCG;AACH,OAAM,SAAU,QAAQ,CAAC,UAAkB,EAAE,YAAkB,EAAA;EAC7D,OAAO,UAAC,MAAW,EAAE,WAAmB,EAAI;IAC1C,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,eAAe,EAAA,eAAA,KACrC,WAAW,EAAG;MACb,WAAW,EAAE,sBAAsB,CAAC,QAAQ;MAC5C,WAAW,EAAX,WAAW;MACX,UAAU,EAAV,UAAU;MACV,YAAY,EAAZ;KACD,EACuB;EAC5B,CAAC;AACH","sourceRoot":"","sourcesContent":["import { Store } from \"@tsed/core\";\nimport { INJECTABLE_PROP } from \"../constants/constants.js\";\nimport { InjectablePropertyType } from \"../domain/InjectablePropertyType.js\";\n/**\n * Return value from Configuration.\n *\n * ## Example\n *\n * ```typescript\n * import {Env} from \"@tsed/core\";\n * import {Constant, Value} from \"@tsed/di\";\n *\n * export class MyClass {\n *\n *    @Constant(\"env\")\n *    env: Env;\n *\n *    @Value(\"swagger.path\")\n *    swaggerPath: string;\n *\n *    @Value(\"swagger.path\", \"defaultValue\")\n *    swaggerPath: string;\n *\n *    constructor() {\n *       console.log(this.swaggerPath) // undefined. Not available on constructor\n *    }\n *\n *    $onInit() {\n *      console.log(this.swaggerPath)  // something\n *    }\n * }\n * ```\n *\n * @param {string} expression\n * @param defaultValue\n * @returns {(targetClass: any, attributeName: string) => any}\n * @decorator\n */\nexport function Constant(expression, defaultValue) {\n    return (target, propertyKey) => {\n        Store.from(target).merge(INJECTABLE_PROP, {\n            [propertyKey]: {\n                bindingType: InjectablePropertyType.CONSTANT,\n                propertyKey,\n                expression,\n                defaultValue\n            }\n        });\n    };\n}\n//# sourceMappingURL=constant.js.map"]},"metadata":{},"sourceType":"module"}