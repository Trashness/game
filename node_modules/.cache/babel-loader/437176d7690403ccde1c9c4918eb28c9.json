{"ast":null,"code":"import { GlobalProviders } from \"../registries/GlobalProviders.js\";\n/**\n * Override a provider which is already registered in ProviderRegistry.\n * @returns {Function}\n * @decorators\n * @param originalProvider\n */\nexport function OverrideProvider(originalProvider) {\n  return function (target) {\n    GlobalProviders.get(originalProvider).useClass = target;\n  };\n}","map":{"version":3,"sources":["../../../src/decorators/overrideProvider.ts"],"names":[],"mappings":"AACA,SAAQ,eAAe,QAAO,kCAAgC;AAE9D;;;;;AAKG;AACH,OAAM,SAAU,gBAAgB,CAAC,gBAA2B,EAAA;EAC1D,OAAO,UAAC,MAAiB,EAAU;IACjC,eAAe,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,QAAQ,GAAG,MAAM;EAC1D,CAAC;AACH","sourceRoot":"","sourcesContent":["import { GlobalProviders } from \"../registries/GlobalProviders.js\";\n/**\n * Override a provider which is already registered in ProviderRegistry.\n * @returns {Function}\n * @decorators\n * @param originalProvider\n */\nexport function OverrideProvider(originalProvider) {\n    return (target) => {\n        GlobalProviders.get(originalProvider).useClass = target;\n    };\n}\n//# sourceMappingURL=overrideProvider.js.map"]},"metadata":{},"sourceType":"module"}