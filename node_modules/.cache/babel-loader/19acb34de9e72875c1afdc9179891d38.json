{"ast":null,"code":"import _objectSpread from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classPrivateFieldInitSpec from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _defineProperty from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classPrivateFieldGet from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport _classPrivateFieldSet from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js\";\nimport { Hooks } from \"@tsed/core\";\nimport { levels } from \"@tsed/logger\";\nvar LEVELS = levels();\nvar _additionalProps = /*#__PURE__*/new WeakMap();\nvar _hooks = /*#__PURE__*/new WeakMap();\nvar _stack = /*#__PURE__*/new WeakMap();\nvar _logger = /*#__PURE__*/new WeakMap();\nexport var ContextLogger = /*#__PURE__*/function () {\n  function ContextLogger(_ref) {\n    var id = _ref.id,\n      logger = _ref.logger,\n      _ref$dateStart = _ref.dateStart,\n      dateStart = _ref$dateStart === void 0 ? new Date() : _ref$dateStart,\n      _ref$level = _ref.level,\n      level = _ref$level === void 0 ? \"all\" : _ref$level,\n      _ref$maxStackSize = _ref.maxStackSize,\n      maxStackSize = _ref$maxStackSize === void 0 ? 30 : _ref$maxStackSize,\n      additionalProps = _ref.additionalProps;\n    _classCallCheck(this, ContextLogger);\n    _defineProperty(this, \"dateStart\", void 0);\n    _defineProperty(this, \"id\", void 0);\n    _classPrivateFieldInitSpec(this, _additionalProps, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"maxStackSize\", void 0);\n    _defineProperty(this, \"level\", void 0);\n    _classPrivateFieldInitSpec(this, _hooks, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _stack, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _logger, {\n      writable: true,\n      value: void 0\n    });\n    this.dateStart = dateStart;\n    this.id = id;\n    _classPrivateFieldSet(this, _logger, logger);\n    _classPrivateFieldSet(this, _additionalProps, additionalProps);\n    this.level = LEVELS[level.toUpperCase()] || LEVELS.ALL;\n    this.maxStackSize = maxStackSize;\n  }\n  _createClass(ContextLogger, [{\n    key: \"hooks\",\n    get: function get() {\n      return _classPrivateFieldSet(this, _hooks, _classPrivateFieldGet(this, _hooks) || new Hooks());\n    }\n  }, {\n    key: \"stack\",\n    get: function get() {\n      return _classPrivateFieldSet(this, _stack, _classPrivateFieldGet(this, _stack) || []);\n    }\n  }, {\n    key: \"alterLog\",\n    value: function alterLog(cb) {\n      return this.hooks.on(\"log\", cb);\n    }\n  }, {\n    key: \"alterIgnoreLog\",\n    value: function alterIgnoreLog(cb) {\n      return this.hooks.on(\"ignore\", cb);\n    }\n  }, {\n    key: \"info\",\n    value: function info(obj) {\n      this.run(levels().INFO, obj);\n      return this;\n    }\n  }, {\n    key: \"debug\",\n    value: function debug(obj) {\n      var withRequest = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.run(levels().DEBUG, obj, withRequest);\n      return this;\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(obj) {\n      this.run(levels().WARN, obj);\n      return this;\n    }\n  }, {\n    key: \"error\",\n    value: function error(obj) {\n      this.run(levels().ERROR, obj);\n      return this;\n    }\n  }, {\n    key: \"fatal\",\n    value: function fatal(obj) {\n      this.run(levels().FATAL, obj);\n      return this;\n    }\n  }, {\n    key: \"trace\",\n    value: function trace(obj) {\n      this.run(levels().TRACE, obj);\n      return this;\n    }\n  }, {\n    key: \"flush\",\n    value: function flush() {\n      var _this = this;\n      if (this.stack.length) {\n        this.stack.forEach(function (_ref2) {\n          var level = _ref2.level,\n            data = _ref2.data;\n          _classPrivateFieldGet(_this, _logger)[level](data);\n        });\n        _classPrivateFieldSet(this, _stack, []);\n      }\n    }\n  }, {\n    key: \"isLevelEnabled\",\n    value: function isLevelEnabled(otherLevel) {\n      return this.level.isLessThanOrEqualTo(otherLevel);\n    }\n    /**\n     * Return the duration between the time when LogIncomingRequest has handle the request and now.\n     * @returns {number}\n     */\n  }, {\n    key: \"getDuration\",\n    value: function getDuration() {\n      return new Date().getTime() - this.dateStart.getTime();\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(obj) {\n      if (typeof obj === \"string\") {\n        obj = {\n          message: obj\n        };\n      }\n      return _objectSpread(_objectSpread({}, _classPrivateFieldGet(this, _additionalProps)), {}, {\n        reqId: this.id,\n        time: new Date(),\n        duration: this.getDuration()\n      }, obj);\n    }\n  }, {\n    key: \"run\",\n    value: function run(level, obj, withRequest) {\n      var _classPrivateFieldGet2;\n      if (!this.isLevelEnabled(level)) {\n        return;\n      }\n      var ignore = (_classPrivateFieldGet2 = _classPrivateFieldGet(this, _hooks)) === null || _classPrivateFieldGet2 === void 0 ? void 0 : _classPrivateFieldGet2.alter(\"ignore\", false, [obj]);\n      if (!ignore) {\n        var levelStr = level.levelStr.toLowerCase();\n        obj = this.hooks.alter(\"log\", this.getData(obj), [levelStr, withRequest]);\n        this.stack.push({\n          level: levelStr,\n          data: obj\n        });\n      }\n      if (this.maxStackSize < this.stack.length) {\n        this.flush();\n      }\n    }\n  }]);\n  return ContextLogger;\n}();","map":{"version":3,"sources":["../../../src/domain/ContextLogger.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Hooks } from \"@tsed/core\";\nimport { levels } from \"@tsed/logger\";\nconst LEVELS = levels();\nexport class ContextLogger {\n    dateStart;\n    id;\n    #additionalProps;\n    maxStackSize;\n    level;\n    #hooks;\n    #stack;\n    #logger;\n    constructor({ id, logger, dateStart = new Date(), level = \"all\", maxStackSize = 30, additionalProps }) {\n        this.dateStart = dateStart;\n        this.id = id;\n        this.#logger = logger;\n        this.#additionalProps = additionalProps;\n        this.level = (LEVELS[level.toUpperCase()] || LEVELS.ALL);\n        this.maxStackSize = maxStackSize;\n    }\n    get hooks() {\n        return (this.#hooks = this.#hooks || new Hooks());\n    }\n    get stack() {\n        return (this.#stack = this.#stack || []);\n    }\n    alterLog(cb) {\n        return this.hooks.on(\"log\", cb);\n    }\n    alterIgnoreLog(cb) {\n        return this.hooks.on(\"ignore\", cb);\n    }\n    info(obj) {\n        this.run(levels().INFO, obj);\n        return this;\n    }\n    debug(obj, withRequest = true) {\n        this.run(levels().DEBUG, obj, withRequest);\n        return this;\n    }\n    warn(obj) {\n        this.run(levels().WARN, obj);\n        return this;\n    }\n    error(obj) {\n        this.run(levels().ERROR, obj);\n        return this;\n    }\n    fatal(obj) {\n        this.run(levels().FATAL, obj);\n        return this;\n    }\n    trace(obj) {\n        this.run(levels().TRACE, obj);\n        return this;\n    }\n    flush() {\n        if (this.stack.length) {\n            this.stack.forEach(({ level, data }) => {\n                this.#logger[level](data);\n            });\n            this.#stack = [];\n        }\n    }\n    isLevelEnabled(otherLevel) {\n        return this.level.isLessThanOrEqualTo(otherLevel);\n    }\n    /**\n     * Return the duration between the time when LogIncomingRequest has handle the request and now.\n     * @returns {number}\n     */\n    getDuration() {\n        return new Date().getTime() - this.dateStart.getTime();\n    }\n    getData(obj) {\n        if (typeof obj === \"string\") {\n            obj = { message: obj };\n        }\n        return { ...this.#additionalProps, reqId: this.id, time: new Date(), duration: this.getDuration(), ...obj };\n    }\n    run(level, obj, withRequest) {\n        if (!this.isLevelEnabled(level)) {\n            return;\n        }\n        const ignore = this.#hooks?.alter(\"ignore\", false, [obj]);\n        if (!ignore) {\n            const levelStr = level.levelStr.toLowerCase();\n            obj = this.hooks.alter(\"log\", this.getData(obj), [levelStr, withRequest]);\n            this.stack.push({ level: levelStr, data: obj });\n        }\n        if (this.maxStackSize < this.stack.length) {\n            this.flush();\n        }\n    }\n}\n//# sourceMappingURL=ContextLogger.js.map"]},"metadata":{},"sourceType":"module"}