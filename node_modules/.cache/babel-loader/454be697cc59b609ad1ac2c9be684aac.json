{"ast":null,"code":"import { decorateProperty as o } from \"./base.js\";\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar n;\nvar e = null != (null === (n = window.HTMLSlotElement) || void 0 === n ? void 0 : n.prototype.assignedElements) ? function (o, n) {\n  return o.assignedElements(n);\n} : function (o, n) {\n  return o.assignedNodes(n).filter(function (o) {\n    return o.nodeType === Node.ELEMENT_NODE;\n  });\n};\nfunction l(n) {\n  var _ref = null != n ? n : {},\n    l = _ref.slot,\n    t = _ref.selector;\n  return o({\n    descriptor: function descriptor(o) {\n      return {\n        get: function get() {\n          var o;\n          var r = \"slot\" + (l ? \"[name=\".concat(l, \"]\") : \":not([name])\"),\n            i = null === (o = this.renderRoot) || void 0 === o ? void 0 : o.querySelector(r),\n            s = null != i ? e(i, n) : [];\n          return t ? s.filter(function (o) {\n            return o.matches(t);\n          }) : s;\n        },\n        enumerable: !0,\n        configurable: !0\n      };\n    }\n  });\n}\nexport { l as queryAssignedElements };","map":{"version":3,"sources":["../src/decorators/query-assigned-elements.ts"],"names":["window","slotAssignedElements","_a","HTMLSlotElement","prototype","assignedElements","slot","opts","assignedNodes","filter","node","nodeType","Node","ELEMENT_NODE","queryAssignedElements","options","selector","decorateProperty","descriptor","_name","get","slotSelector","slotEl","renderRoot","querySelector","elements","matches","enumerable","configurable"],"mappings":";;;;;;;AAmBA,IAKMC,CAAAA,GACkD,IAAA,KAAhC,IAAA,MAAtBC,CAAAA,GANsCF,MAAAA,CAM/BG,eAAAA,CAAAA,IAAAA,KAAe,CAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,CAAEC,SAAAA,CAAUC,gBAAAA,CAAAA,GAC9B,UAACC,CAAAA,EAAuBC,CAAAA;EAAAA,OACtBD,CAAAA,CAAKD,gBAAAA,CAAiBE,CAAAA,CAAAA;AAAAA,IACxB,UAACD,CAAAA,EAAuBC,CAAAA;EAAAA,OACtBD,CAAAA,CACGE,aAAAA,CAAcD,CAAAA,CAAAA,CACdE,MAAAA,CACEC,UAAAA,CAAAA;IAAAA,OAA0BA,CAAAA,CAAKC,QAAAA,KAAaC,IAAAA,CAAKC,YAAAA;EAAAA,EAAAA;AAAAA;AA8CxD,SAAUC,CAAAA,CAAsBC,CAAAA,EAAAA;EACpC,IAAA,IAAA,GAAyBA,IAAAA,IAAAA,CAAAA,GAAAA,CAAAA,GAAW,CAAA,CAAA;IAA7BT,CAAAA,GAAAA,IAAAA,CAADA,IAAAA;IAAOU,CAAAA,GAAAA,IAAAA,CAAFA,QAAAA;EACX,OAAOC,CAAAA,CAAiB;IACtBC,UAAAA,EAAaC,SAAAA,WAAAA,CAAAA;MAAAA,OAAwB;QACnCC,GAAAA,WAAAA,IAAAA,EAAAA;UAAAA,IAAAA,CAAAA;UACE,IAAMC,CAAAA,GAAe,MAAA,IAAOf,CAAAA,YAAAA,MAAAA,CAAgBA,CAAAA,SAAU,cAAA,CAAA;YAChDgB,CAAAA,GACW,IAAA,MAAfpB,CAAAA,GAAAA,IAAAA,CAAKqB,UAAAA,CAAAA,IAAAA,KAAU,CAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,CAAEC,aAAAA,CAA+BH,CAAAA,CAAAA;YAC5CI,CAAAA,GACM,IAAA,IAAVH,CAAAA,GAAiBrB,CAAAA,CAAqBqB,CAAAA,EAAQP,CAAAA,CAAAA,GAAW,EAAA;UAC3D,OAAIC,CAAAA,GACKS,CAAAA,CAAShB,MAAAA,CAAQC,UAAAA,CAAAA;YAAAA,OAASA,CAAAA,CAAKgB,OAAAA,CAAQV,CAAAA,CAAAA;UAAAA,EAAAA,GAEzCS,CACR;QAAA,CAAA;QACDE,UAAAA,EAAAA,CAAY,CAAA;QACZC,YAAAA,EAAAA,CAAc;MAAA,CAAA;IAAA;EAAA,CAAA,CAGpB;AAAA;AAAA,SAAA,CAAA,IAAA,qBAAA","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {decorateProperty} from './base.js';\n\nimport type {ReactiveElement} from '../reactive-element.js';\nimport type {QueryAssignedNodesOptions} from './query-assigned-nodes.js';\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * A tiny module scoped polyfill for HTMLSlotElement.assignedElements.\n */\nconst slotAssignedElements =\n  global.HTMLSlotElement?.prototype.assignedElements != null\n    ? (slot: HTMLSlotElement, opts?: AssignedNodesOptions) =>\n        slot.assignedElements(opts)\n    : (slot: HTMLSlotElement, opts?: AssignedNodesOptions) =>\n        slot\n          .assignedNodes(opts)\n          .filter(\n            (node): node is Element => node.nodeType === Node.ELEMENT_NODE\n          );\n\n/**\n * Options for the {@linkcode queryAssignedElements} decorator. Extends the\n * options that can be passed into\n * [HTMLSlotElement.assignedElements](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n */\nexport interface QueryAssignedElementsOptions\n  extends QueryAssignedNodesOptions {\n  /**\n   * CSS selector used to filter the elements returned. For example, a selector\n   * of `\".item\"` will only include elements with the `item` class.\n   */\n  selector?: string;\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedElements` of the given `slot`. Provides a declarative\n * way to use\n * [`HTMLSlotElement.assignedElements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n *\n * Can be passed an optional {@linkcode QueryAssignedElementsOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedElements({ slot: 'list' })\n *   listItems!: Array<HTMLElement>;\n *   @queryAssignedElements()\n *   unnamedSlotEls!: Array<HTMLElement>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *       <slot></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note, the type of this property should be annotated as `Array<HTMLElement>`.\n *\n * @category Decorator\n */\nexport function queryAssignedElements(options?: QueryAssignedElementsOptions) {\n  const {slot, selector} = options ?? {};\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      get(this: ReactiveElement) {\n        const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n        const slotEl =\n          this.renderRoot?.querySelector<HTMLSlotElement>(slotSelector);\n        const elements =\n          slotEl != null ? slotAssignedElements(slotEl, options) : [];\n        if (selector) {\n          return elements.filter((node) => node.matches(selector));\n        }\n        return elements;\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n"]},"metadata":{},"sourceType":"module"}