{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useReducer } from 'react';\nimport { useEthers, useLocalStorage, useConfig } from '../../hooks';\nimport { useIsMounted } from '../../hooks/useIsMounted';\nimport { useNotificationsContext } from '../notifications/context';\nimport { TransactionsContext } from './context';\nimport { DEFAULT_STORED_TRANSACTIONS } from './model';\nimport { transactionReducer } from './reducer';\nexport function TransactionProvider(_ref) {\n  var children = _ref.children;\n  var _useEthers = useEthers(),\n    chainId = _useEthers.chainId,\n    library = _useEthers.library;\n  var _useConfig = useConfig(),\n    localStorage = _useConfig.localStorage;\n  var _useLocalStorage = useLocalStorage(localStorage.transactionPath),\n    _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n    storage = _useLocalStorage2[0],\n    setStorage = _useLocalStorage2[1];\n  var _useReducer = useReducer(transactionReducer, storage !== null && storage !== void 0 ? storage : DEFAULT_STORED_TRANSACTIONS),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    transactions = _useReducer2[0],\n    dispatch = _useReducer2[1];\n  var _useNotificationsCont = useNotificationsContext(),\n    addNotification = _useNotificationsCont.addNotification;\n  var isMounted = useIsMounted();\n  useEffect(function () {\n    setStorage(transactions);\n  }, [transactions]);\n  var addTransaction = useCallback(function (payload) {\n    if (!isMounted()) {\n      return;\n    }\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: payload\n    });\n    if (payload.receipt) {\n      var type = payload.receipt.status === 0 ? 'transactionFailed' : 'transactionSucceed';\n      addNotification({\n        notification: {\n          type: type,\n          submittedAt: Date.now(),\n          transaction: payload.transaction,\n          receipt: payload.receipt,\n          transactionName: payload.transactionName\n        },\n        chainId: payload.transaction.chainId\n      });\n      return;\n    }\n    addNotification({\n      notification: {\n        type: 'transactionStarted',\n        transaction: payload.transaction,\n        submittedAt: payload.submittedAt,\n        transactionName: payload.transactionName\n      },\n      chainId: payload.transaction.chainId\n    });\n  }, [dispatch]);\n  var updateTransaction = useCallback(function (payload) {\n    if (!isMounted()) {\n      return;\n    }\n    dispatch({\n      type: 'UPDATE_TRANSACTION',\n      payload: payload\n    });\n    var type = payload.receipt.status === 0 ? 'transactionFailed' : 'transactionSucceed';\n    addNotification({\n      notification: {\n        type: type,\n        submittedAt: Date.now(),\n        transaction: payload.transaction,\n        receipt: payload.receipt,\n        transactionName: payload.transactionName\n      },\n      chainId: payload.transaction.chainId\n    });\n  }, [dispatch]);\n  useEffect(function () {\n    var updateTransactions = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _a, blockNumber, checkTransaction, chainTransactions, newTransactions, _iterator, _step, tx, newTransaction;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(!chainId || !library)) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              _context2.next = 4;\n              return library.getBlockNumber();\n            case 4:\n              blockNumber = _context2.sent;\n              checkTransaction = /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(tx) {\n                  var receipt, type;\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!(tx.receipt || !shouldCheck(blockNumber, tx))) {\n                          _context.next = 2;\n                          break;\n                        }\n                        return _context.abrupt(\"return\", tx);\n                      case 2:\n                        _context.prev = 2;\n                        _context.next = 5;\n                        return library.getTransactionReceipt(tx.transaction.hash);\n                      case 5:\n                        receipt = _context.sent;\n                        if (!receipt) {\n                          _context.next = 12;\n                          break;\n                        }\n                        type = receipt.status === 0 ? 'transactionFailed' : 'transactionSucceed';\n                        addNotification({\n                          notification: {\n                            type: type,\n                            submittedAt: Date.now(),\n                            transaction: tx.transaction,\n                            receipt: receipt,\n                            transactionName: tx.transactionName\n                          },\n                          chainId: chainId\n                        });\n                        return _context.abrupt(\"return\", Object.assign(Object.assign({}, tx), {\n                          receipt: receipt\n                        }));\n                      case 12:\n                        return _context.abrupt(\"return\", Object.assign(Object.assign({}, tx), {\n                          lastCheckedBlockNumber: blockNumber\n                        }));\n                      case 13:\n                        _context.next = 18;\n                        break;\n                      case 15:\n                        _context.prev = 15;\n                        _context.t0 = _context[\"catch\"](2);\n                        console.error(\"failed to check transaction hash: \".concat(tx.transaction.hash), _context.t0);\n                      case 18:\n                        return _context.abrupt(\"return\", tx);\n                      case 19:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }, _callee, null, [[2, 15]]);\n                }));\n                return function checkTransaction(_x) {\n                  return _ref3.apply(this, arguments);\n                };\n              }();\n              chainTransactions = (_a = transactions[chainId]) !== null && _a !== void 0 ? _a : [];\n              newTransactions = [];\n              _iterator = _createForOfIteratorHelper(chainTransactions);\n              _context2.prev = 9;\n              _iterator.s();\n            case 11:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 19;\n                break;\n              }\n              tx = _step.value;\n              _context2.next = 15;\n              return checkTransaction(tx);\n            case 15:\n              newTransaction = _context2.sent;\n              newTransactions.push(newTransaction);\n            case 17:\n              _context2.next = 11;\n              break;\n            case 19:\n              _context2.next = 24;\n              break;\n            case 21:\n              _context2.prev = 21;\n              _context2.t0 = _context2[\"catch\"](9);\n              _iterator.e(_context2.t0);\n            case 24:\n              _context2.prev = 24;\n              _iterator.f();\n              return _context2.finish(24);\n            case 27:\n              if (isMounted()) {\n                dispatch({\n                  type: 'UPDATE_TRANSACTIONS',\n                  chainId: chainId,\n                  transactions: newTransactions\n                });\n              }\n            case 28:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[9, 21, 24, 27]]);\n      }));\n      return function updateTransactions() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    void updateTransactions();\n  }, [chainId, library]);\n  return _jsx(TransactionsContext.Provider, {\n    value: {\n      transactions: transactions,\n      addTransaction: addTransaction,\n      updateTransaction: updateTransaction\n    },\n    children: children\n  });\n}\nfunction shouldCheck(blockNumber, tx) {\n  if (tx.receipt) {\n    return false;\n  }\n  if (!tx.lastCheckedBlockNumber) {\n    return true;\n  }\n  var blocksSinceCheck = blockNumber - tx.lastCheckedBlockNumber;\n  if (blocksSinceCheck < 1) {\n    return false;\n  }\n  var minutesPending = (Date.now() - tx.submittedAt) / 1000 / 60;\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9;\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2;\n  }\n  // otherwise every block\n  return true;\n}","map":{"version":3,"sources":["../../../../../src/providers/transactions/provider.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useReducer } from 'react';\nimport { useEthers, useLocalStorage, useConfig } from '../../hooks';\nimport { useIsMounted } from '../../hooks/useIsMounted';\nimport { useNotificationsContext } from '../notifications/context';\nimport { TransactionsContext } from './context';\nimport { DEFAULT_STORED_TRANSACTIONS } from './model';\nimport { transactionReducer } from './reducer';\nexport function TransactionProvider({ children }) {\n    const { chainId, library } = useEthers();\n    const { localStorage } = useConfig();\n    const [storage, setStorage] = useLocalStorage(localStorage.transactionPath);\n    const [transactions, dispatch] = useReducer(transactionReducer, storage !== null && storage !== void 0 ? storage : DEFAULT_STORED_TRANSACTIONS);\n    const { addNotification } = useNotificationsContext();\n    const isMounted = useIsMounted();\n    useEffect(() => {\n        setStorage(transactions);\n    }, [transactions]);\n    const addTransaction = useCallback((payload) => {\n        if (!isMounted()) {\n            return;\n        }\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload,\n        });\n        if (payload.receipt) {\n            const type = payload.receipt.status === 0 ? 'transactionFailed' : 'transactionSucceed';\n            addNotification({\n                notification: {\n                    type,\n                    submittedAt: Date.now(),\n                    transaction: payload.transaction,\n                    receipt: payload.receipt,\n                    transactionName: payload.transactionName,\n                },\n                chainId: payload.transaction.chainId,\n            });\n            return;\n        }\n        addNotification({\n            notification: {\n                type: 'transactionStarted',\n                transaction: payload.transaction,\n                submittedAt: payload.submittedAt,\n                transactionName: payload.transactionName,\n            },\n            chainId: payload.transaction.chainId,\n        });\n    }, [dispatch]);\n    const updateTransaction = useCallback((payload) => {\n        if (!isMounted()) {\n            return;\n        }\n        dispatch({\n            type: 'UPDATE_TRANSACTION',\n            payload,\n        });\n        const type = payload.receipt.status === 0 ? 'transactionFailed' : 'transactionSucceed';\n        addNotification({\n            notification: {\n                type,\n                submittedAt: Date.now(),\n                transaction: payload.transaction,\n                receipt: payload.receipt,\n                transactionName: payload.transactionName,\n            },\n            chainId: payload.transaction.chainId,\n        });\n    }, [dispatch]);\n    useEffect(() => {\n        const updateTransactions = async () => {\n            var _a;\n            if (!chainId || !library)\n                return;\n            const blockNumber = await library.getBlockNumber();\n            const checkTransaction = async (tx) => {\n                if (tx.receipt || !shouldCheck(blockNumber, tx)) {\n                    return tx;\n                }\n                try {\n                    const receipt = await library.getTransactionReceipt(tx.transaction.hash);\n                    if (receipt) {\n                        const type = receipt.status === 0 ? 'transactionFailed' : 'transactionSucceed';\n                        addNotification({\n                            notification: {\n                                type,\n                                submittedAt: Date.now(),\n                                transaction: tx.transaction,\n                                receipt,\n                                transactionName: tx.transactionName,\n                            },\n                            chainId,\n                        });\n                        return Object.assign(Object.assign({}, tx), { receipt });\n                    }\n                    else {\n                        return Object.assign(Object.assign({}, tx), { lastCheckedBlockNumber: blockNumber });\n                    }\n                }\n                catch (error) {\n                    console.error(`failed to check transaction hash: ${tx.transaction.hash}`, error);\n                }\n                return tx;\n            };\n            const chainTransactions = (_a = transactions[chainId]) !== null && _a !== void 0 ? _a : [];\n            const newTransactions = [];\n            for (const tx of chainTransactions) {\n                const newTransaction = await checkTransaction(tx);\n                newTransactions.push(newTransaction);\n            }\n            if (isMounted()) {\n                dispatch({ type: 'UPDATE_TRANSACTIONS', chainId, transactions: newTransactions });\n            }\n        };\n        void updateTransactions();\n    }, [chainId, library]);\n    return (_jsx(TransactionsContext.Provider, { value: { transactions, addTransaction, updateTransaction }, children: children }));\n}\nfunction shouldCheck(blockNumber, tx) {\n    if (tx.receipt) {\n        return false;\n    }\n    if (!tx.lastCheckedBlockNumber) {\n        return true;\n    }\n    const blocksSinceCheck = blockNumber - tx.lastCheckedBlockNumber;\n    if (blocksSinceCheck < 1) {\n        return false;\n    }\n    const minutesPending = (Date.now() - tx.submittedAt) / 1000 / 60;\n    if (minutesPending > 60) {\n        // every 10 blocks if pending for longer than an hour\n        return blocksSinceCheck > 9;\n    }\n    if (minutesPending > 5) {\n        // every 3 blocks if pending more than 5 minutes\n        return blocksSinceCheck > 2;\n    }\n    // otherwise every block\n    return true;\n}\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"module"}