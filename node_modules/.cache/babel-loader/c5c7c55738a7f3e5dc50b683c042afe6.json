{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport EventEmitter from \"events\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport { HttpConnection } from \"@walletconnect/jsonrpc-http-connection\";\nimport { SIGNING_METHODS } from \"@walletconnect/legacy-types\";\nimport { getRpcUrl } from \"@walletconnect/legacy-utils\";\nimport { SignerConnection } from \"./signer\";\nvar WalletConnectProvider = /*#__PURE__*/function () {\n  function WalletConnectProvider(opts) {\n    _classCallCheck(this, WalletConnectProvider);\n    this.events = new EventEmitter();\n    this.rpc = {\n      infuraId: opts === null || opts === void 0 ? void 0 : opts.infuraId,\n      custom: opts === null || opts === void 0 ? void 0 : opts.rpc\n    };\n    this.signer = new JsonRpcProvider(new SignerConnection(opts));\n    var chainId = this.signer.connection.chainId || (opts === null || opts === void 0 ? void 0 : opts.chainId) || 1;\n    this.http = this.setHttpProvider(chainId);\n    this.registerEventListeners();\n  }\n  _createClass(WalletConnectProvider, [{\n    key: \"connected\",\n    get: function get() {\n      return this.signer.connection.connected;\n    }\n  }, {\n    key: \"connector\",\n    get: function get() {\n      return this.signer.connection.connector;\n    }\n  }, {\n    key: \"accounts\",\n    get: function get() {\n      return this.signer.connection.accounts;\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return this.signer.connection.chainId;\n    }\n  }, {\n    key: \"rpcUrl\",\n    get: function get() {\n      var _a;\n      return ((_a = this.http) === null || _a === void 0 ? void 0 : _a.connection).url || \"\";\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(args) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = args.method;\n              _context.next = _context.t0 === \"eth_requestAccounts\" ? 3 : _context.t0 === \"eth_accounts\" ? 6 : _context.t0 === \"eth_chainId\" ? 7 : 8;\n              break;\n            case 3:\n              _context.next = 5;\n              return this.connect();\n            case 5:\n              return _context.abrupt(\"return\", this.signer.connection.accounts);\n            case 6:\n              return _context.abrupt(\"return\", this.signer.connection.accounts);\n            case 7:\n              return _context.abrupt(\"return\", this.signer.connection.chainId);\n            case 8:\n              return _context.abrupt(\"break\", 9);\n            case 9:\n              if (!SIGNING_METHODS.includes(args.method)) {\n                _context.next = 11;\n                break;\n              }\n              return _context.abrupt(\"return\", this.signer.request(args));\n            case 11:\n              if (!(typeof this.http === \"undefined\")) {\n                _context.next = 13;\n                break;\n              }\n              throw new Error(\"Cannot request JSON-RPC method (\".concat(args.method, \") without provided rpc url\"));\n            case 13:\n              return _context.abrupt(\"return\", this.http.request(args));\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function request(_x) {\n        return _request.apply(this, arguments);\n      }\n      return request;\n    }()\n  }, {\n    key: \"sendAsync\",\n    value: function sendAsync(args, callback) {\n      this.request(args).then(function (response) {\n        return callback(null, response);\n      }).catch(function (error) {\n        return callback(error, undefined);\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var accounts;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.request({\n                method: \"eth_requestAccounts\"\n              });\n            case 2:\n              accounts = _context2.sent;\n              return _context2.abrupt(\"return\", accounts);\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n      return enable;\n    }()\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (this.signer.connection.connected) {\n                _context3.next = 3;\n                break;\n              }\n              _context3.next = 3;\n              return this.signer.connect();\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!this.signer.connection.connected) {\n                _context4.next = 3;\n                break;\n              }\n              _context4.next = 3;\n              return this.signer.disconnect();\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n      return disconnect;\n    }()\n  }, {\n    key: \"on\",\n    value: function on(event, listener) {\n      this.events.on(event, listener);\n    }\n  }, {\n    key: \"once\",\n    value: function once(event, listener) {\n      this.events.once(event, listener);\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(event, listener) {\n      this.events.removeListener(event, listener);\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      this.events.off(event, listener);\n    }\n  }, {\n    key: \"isWalletConnect\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"registerEventListeners\",\n    value: function registerEventListeners() {\n      var _this = this;\n      this.signer.connection.on(\"accountsChanged\", function (accounts) {\n        _this.events.emit(\"accountsChanged\", accounts);\n      });\n      this.signer.connection.on(\"chainChanged\", function (chainId) {\n        _this.http = _this.setHttpProvider(chainId);\n        _this.events.emit(\"chainChanged\", chainId);\n      });\n      this.signer.on(\"disconnect\", function () {\n        _this.events.emit(\"disconnect\");\n      });\n    }\n  }, {\n    key: \"setHttpProvider\",\n    value: function setHttpProvider(chainId) {\n      var rpcUrl = getRpcUrl(chainId, this.rpc);\n      if (typeof rpcUrl === \"undefined\") return undefined;\n      var http = new JsonRpcProvider(new HttpConnection(rpcUrl));\n      return http;\n    }\n  }]);\n  return WalletConnectProvider;\n}();\nexport default WalletConnectProvider;","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import EventEmitter from \"events\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport { HttpConnection } from \"@walletconnect/jsonrpc-http-connection\";\nimport { SIGNING_METHODS, } from \"@walletconnect/legacy-types\";\nimport { getRpcUrl } from \"@walletconnect/legacy-utils\";\nimport { SignerConnection } from \"./signer\";\nclass WalletConnectProvider {\n    constructor(opts) {\n        this.events = new EventEmitter();\n        this.rpc = { infuraId: opts === null || opts === void 0 ? void 0 : opts.infuraId, custom: opts === null || opts === void 0 ? void 0 : opts.rpc };\n        this.signer = new JsonRpcProvider(new SignerConnection(opts));\n        const chainId = this.signer.connection.chainId || (opts === null || opts === void 0 ? void 0 : opts.chainId) || 1;\n        this.http = this.setHttpProvider(chainId);\n        this.registerEventListeners();\n    }\n    get connected() {\n        return this.signer.connection.connected;\n    }\n    get connector() {\n        return this.signer.connection.connector;\n    }\n    get accounts() {\n        return this.signer.connection.accounts;\n    }\n    get chainId() {\n        return this.signer.connection.chainId;\n    }\n    get rpcUrl() {\n        var _a;\n        return ((_a = this.http) === null || _a === void 0 ? void 0 : _a.connection).url || \"\";\n    }\n    async request(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n                await this.connect();\n                return this.signer.connection.accounts;\n            case \"eth_accounts\":\n                return this.signer.connection.accounts;\n            case \"eth_chainId\":\n                return this.signer.connection.chainId;\n            default:\n                break;\n        }\n        if (SIGNING_METHODS.includes(args.method)) {\n            return this.signer.request(args);\n        }\n        if (typeof this.http === \"undefined\") {\n            throw new Error(`Cannot request JSON-RPC method (${args.method}) without provided rpc url`);\n        }\n        return this.http.request(args);\n    }\n    sendAsync(args, callback) {\n        this.request(args)\n            .then(response => callback(null, response))\n            .catch(error => callback(error, undefined));\n    }\n    async enable() {\n        const accounts = await this.request({ method: \"eth_requestAccounts\" });\n        return accounts;\n    }\n    async connect() {\n        if (!this.signer.connection.connected) {\n            await this.signer.connect();\n        }\n    }\n    async disconnect() {\n        if (this.signer.connection.connected) {\n            await this.signer.disconnect();\n        }\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    get isWalletConnect() {\n        return true;\n    }\n    registerEventListeners() {\n        this.signer.connection.on(\"accountsChanged\", accounts => {\n            this.events.emit(\"accountsChanged\", accounts);\n        });\n        this.signer.connection.on(\"chainChanged\", chainId => {\n            this.http = this.setHttpProvider(chainId);\n            this.events.emit(\"chainChanged\", chainId);\n        });\n        this.signer.on(\"disconnect\", () => {\n            this.events.emit(\"disconnect\");\n        });\n    }\n    setHttpProvider(chainId) {\n        const rpcUrl = getRpcUrl(chainId, this.rpc);\n        if (typeof rpcUrl === \"undefined\")\n            return undefined;\n        const http = new JsonRpcProvider(new HttpConnection(rpcUrl));\n        return http;\n    }\n}\nexport default WalletConnectProvider;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}