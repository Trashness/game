{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { utils, constants } from 'ethers';\nimport { getChainById } from './chain';\nexport var GNOSIS_SAFE_ABI = ['function nonce() view returns (uint256)', 'event ExecutionSuccess(bytes32 txHash, uint256 payment)'];\nexport var buildSafeTransaction = function buildSafeTransaction(template) {\n  return {\n    to: template.to,\n    value: template.value || 0,\n    data: template.data || '0x',\n    operation: template.operation || 0,\n    safeTxGas: template.safeTxGas || 0,\n    baseGas: template.baseGas || 0,\n    gasPrice: template.gasPrice || 0,\n    gasToken: template.gasToken || constants.AddressZero,\n    refundReceiver: template.refundReceiver || constants.AddressZero,\n    nonce: template.nonce || 0\n  };\n};\nvar EIP712_SAFE_TX_TYPE = {\n  SafeTx: [{\n    type: 'address',\n    name: 'to'\n  }, {\n    type: 'uint256',\n    name: 'value'\n  }, {\n    type: 'bytes',\n    name: 'data'\n  }, {\n    type: 'uint8',\n    name: 'operation'\n  }, {\n    type: 'uint256',\n    name: 'safeTxGas'\n  }, {\n    type: 'uint256',\n    name: 'baseGas'\n  }, {\n    type: 'uint256',\n    name: 'gasPrice'\n  }, {\n    type: 'address',\n    name: 'gasToken'\n  }, {\n    type: 'address',\n    name: 'refundReceiver'\n  }, {\n    type: 'uint256',\n    name: 'nonce'\n  }]\n};\nexport var sanitizeTransactionRequest = function sanitizeTransactionRequest(transactionRequest) {\n  var _a;\n  return Object.assign(Object.assign({}, transactionRequest), {\n    data: (_a = transactionRequest.data) !== null && _a !== void 0 ? _a : '0x'\n  });\n};\nexport var calculateSafeTransactionHash = function calculateSafeTransactionHash(safe, safeTx, chainId) {\n  return utils._TypedDataEncoder.hash({\n    verifyingContract: safe.address,\n    chainId: chainId\n  }, EIP712_SAFE_TX_TYPE, safeTx);\n};\nexport var getLatestNonce = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(chainId, safeAddress) {\n    var _a, _b, _c, response, allTransactions, latestNonce;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch(\"https://safe-transaction.\".concat((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.chainName, \".gnosis.io/api/v1/safes/\").concat(safeAddress, \"/all-transactions?limit=1&executed=false&queued=true\"));\n        case 3:\n          response = _context.sent;\n          if (response.ok) {\n            _context.next = 6;\n            break;\n          }\n          return _context.abrupt(\"return\", null);\n        case 6:\n          _context.next = 8;\n          return response.json();\n        case 8:\n          allTransactions = _context.sent;\n          latestNonce = (_c = (_b = allTransactions === null || allTransactions === void 0 ? void 0 : allTransactions.results) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.nonce;\n          if (latestNonce) {\n            _context.next = 12;\n            break;\n          }\n          return _context.abrupt(\"return\", null);\n        case 12:\n          return _context.abrupt(\"return\", latestNonce);\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          return _context.abrupt(\"return\", undefined);\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 15]]);\n  }));\n  return function getLatestNonce(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var waitForSafeTransaction = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(transactionPromise, contract, chainId, safeTx) {\n    var safeTxHash;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          safeTxHash = calculateSafeTransactionHash(contract, safeTx, chainId);\n          return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n            void transactionPromise.catch(function (err) {\n              if ((err === null || err === void 0 ? void 0 : err.message) === 'Transaction was rejected') {\n                reject(err);\n              }\n            });\n            var onExecutionSuccess = /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(txHash, _payment, event) {\n                var transaction, receipt, currentNonce, _transaction, _receipt;\n                return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                  while (1) switch (_context2.prev = _context2.next) {\n                    case 0:\n                      if (!(txHash === safeTxHash)) {\n                        _context2.next = 11;\n                        break;\n                      }\n                      contract.removeListener('ExecutionSuccess', onExecutionSuccess);\n                      _context2.next = 4;\n                      return event.getTransaction();\n                    case 4:\n                      transaction = _context2.sent;\n                      _context2.next = 7;\n                      return event.getTransactionReceipt();\n                    case 7:\n                      receipt = _context2.sent;\n                      resolve({\n                        transaction: transaction,\n                        receipt: receipt,\n                        rejected: false\n                      });\n                      _context2.next = 23;\n                      break;\n                    case 11:\n                      _context2.next = 13;\n                      return contract.nonce();\n                    case 13:\n                      currentNonce = _context2.sent;\n                      if (!(Number(currentNonce) > Number(safeTx.nonce))) {\n                        _context2.next = 23;\n                        break;\n                      }\n                      contract.removeListener('ExecutionSuccess', onExecutionSuccess);\n                      _context2.next = 18;\n                      return event.getTransaction();\n                    case 18:\n                      _transaction = _context2.sent;\n                      _context2.next = 21;\n                      return event.getTransactionReceipt();\n                    case 21:\n                      _receipt = _context2.sent;\n                      resolve({\n                        transaction: _transaction,\n                        receipt: _receipt,\n                        rejected: true\n                      });\n                    case 23:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }, _callee2);\n              }));\n              return function onExecutionSuccess(_x7, _x8, _x9) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n            contract.on('ExecutionSuccess', onExecutionSuccess);\n          }));\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function waitForSafeTransaction(_x3, _x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["../../../../src/helpers/gnosisSafeUtils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { utils, constants } from 'ethers';\nimport { getChainById } from './chain';\nexport const GNOSIS_SAFE_ABI = [\n    'function nonce() view returns (uint256)',\n    'event ExecutionSuccess(bytes32 txHash, uint256 payment)',\n];\nexport const buildSafeTransaction = (template) => {\n    return {\n        to: template.to,\n        value: template.value || 0,\n        data: template.data || '0x',\n        operation: template.operation || 0,\n        safeTxGas: template.safeTxGas || 0,\n        baseGas: template.baseGas || 0,\n        gasPrice: template.gasPrice || 0,\n        gasToken: template.gasToken || constants.AddressZero,\n        refundReceiver: template.refundReceiver || constants.AddressZero,\n        nonce: template.nonce || 0,\n    };\n};\nconst EIP712_SAFE_TX_TYPE = {\n    SafeTx: [\n        { type: 'address', name: 'to' },\n        { type: 'uint256', name: 'value' },\n        { type: 'bytes', name: 'data' },\n        { type: 'uint8', name: 'operation' },\n        { type: 'uint256', name: 'safeTxGas' },\n        { type: 'uint256', name: 'baseGas' },\n        { type: 'uint256', name: 'gasPrice' },\n        { type: 'address', name: 'gasToken' },\n        { type: 'address', name: 'refundReceiver' },\n        { type: 'uint256', name: 'nonce' },\n    ],\n};\nexport const sanitizeTransactionRequest = (transactionRequest) => {\n    var _a;\n    return Object.assign(Object.assign({}, transactionRequest), { data: (_a = transactionRequest.data) !== null && _a !== void 0 ? _a : '0x' });\n};\nexport const calculateSafeTransactionHash = (safe, safeTx, chainId) => {\n    return utils._TypedDataEncoder.hash({ verifyingContract: safe.address, chainId }, EIP712_SAFE_TX_TYPE, safeTx);\n};\nexport const getLatestNonce = async (chainId, safeAddress) => {\n    var _a, _b, _c;\n    try {\n        const response = await fetch(`https://safe-transaction.${(_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.chainName}.gnosis.io/api/v1/safes/${safeAddress}/all-transactions?limit=1&executed=false&queued=true`);\n        if (!response.ok)\n            return null;\n        const allTransactions = await response.json();\n        const latestNonce = (_c = (_b = allTransactions === null || allTransactions === void 0 ? void 0 : allTransactions.results) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.nonce;\n        if (!latestNonce)\n            return null;\n        return latestNonce;\n    }\n    catch (err) {\n        console.error(err);\n        return undefined;\n    }\n};\nexport const waitForSafeTransaction = async (transactionPromise, contract, chainId, safeTx) => {\n    const safeTxHash = calculateSafeTransactionHash(contract, safeTx, chainId);\n    return new Promise((resolve, reject) => {\n        void transactionPromise.catch((err) => {\n            if ((err === null || err === void 0 ? void 0 : err.message) === 'Transaction was rejected') {\n                reject(err);\n            }\n        });\n        const onExecutionSuccess = async (txHash, _payment, event) => {\n            if (txHash === safeTxHash) {\n                contract.removeListener('ExecutionSuccess', onExecutionSuccess);\n                const transaction = await event.getTransaction();\n                const receipt = await event.getTransactionReceipt();\n                resolve({ transaction, receipt, rejected: false });\n            }\n            else {\n                const currentNonce = await contract.nonce();\n                if (Number(currentNonce) > Number(safeTx.nonce)) {\n                    contract.removeListener('ExecutionSuccess', onExecutionSuccess);\n                    const transaction = await event.getTransaction();\n                    const receipt = await event.getTransactionReceipt();\n                    resolve({\n                        transaction,\n                        receipt,\n                        rejected: true,\n                    });\n                }\n            }\n        };\n        contract.on('ExecutionSuccess', onExecutionSuccess);\n    });\n};\n//# sourceMappingURL=gnosisSafeUtils.js.map"]},"metadata":{},"sourceType":"module"}