{"ast":null,"code":"import { useContext } from 'react';\nimport { getChainById } from '../helpers';\nimport { ConfigContext } from '../providers';\nvar validConfigs = function validConfigs(configs) {\n  if (!(configs === null || configs === void 0 ? void 0 : configs.networks) || (configs === null || configs === void 0 ? void 0 : configs.networks.length) === 0) {\n    console.warn('No networks or supportedChain configured');\n  }\n  return configs;\n};\n/**\n * Returns singleton instance of {@link Config}.\n * Takes no parameters.\n * @public\n */\nexport function useConfig() {\n  var _a;\n  var _useContext = useContext(ConfigContext),\n    config = _useContext.config;\n  // backward compatible with supportedChains\n  if (config.supportedChains) {\n    console.warn('supportedChain is deprecated, please pass networks instead');\n    var networks = (_a = config.supportedChains) === null || _a === void 0 ? void 0 : _a.map(function (chainId) {\n      return getChainById(chainId);\n    });\n    return validConfigs(Object.assign(Object.assign({}, config), {\n      networks: networks\n    }));\n  }\n  return validConfigs(config);\n}\n/**\n * @public\n */\nexport function useUpdateConfig() {\n  var _useContext2 = useContext(ConfigContext),\n    updateConfig = _useContext2.updateConfig;\n  return updateConfig;\n}","map":{"version":3,"sources":["../../../../src/hooks/useConfig.ts"],"names":[],"mappings":"AAAA,SAAS,UAAU,QAAQ,OAAO;AAElC,SAAS,YAAY,QAAQ,YAAY;AACzC,SAAS,aAAa,QAAQ,cAAc;AAE5C,IAAM,YAAY,GAAG,SAAf,YAAY,CAAI,OAAmB,EAAwC;EAC/E,IAAI,EAAC,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,QAAQ,CAAA,IAAI,CAAA,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,QAAQ,CAAC,MAAM,MAAK,CAAC,EAAE;IACxD,OAAO,CAAC,IAAI,CAAC,0CAA0C,CAAC;EACzD;EACD,OAAO,OAAO;AAChB,CAAC;AAED;;;;AAIG;AACH,OAAM,SAAU,SAAS,CAAA,EAAA;;EACvB,IAAA,WAAA,GAAmB,UAAU,CAAC,aAAa,CAAC;IAApC,MAAM,GAAA,WAAA,CAAN,MAAM;EAEd;EACA,IAAI,MAAM,CAAC,eAAe,EAAE;IAC1B,OAAO,CAAC,IAAI,CAAC,4DAA4D,CAAC;IAC1E,IAAM,QAAQ,GAAY,CAAA,EAAA,GAAA,MAAM,CAAC,eAAe,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,CAAC,UAAC,OAAO;MAAA,OAAK,YAAY,CAAC,OAAO,CAAC;IAAA,EAAY;IACpG,OAAO,YAAY,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EACd,MAAM,CAAA,EAAA;MACT,QAAQ,EAAR;IAAQ,CAAA,CAAA,CACR;EACH;EAED,OAAO,YAAY,CAAC,MAAM,CAAC;AAC7B;AAEA;;AAEG;AACH,OAAM,SAAU,eAAe,CAAA,EAAA;EAC7B,IAAA,YAAA,GAAyB,UAAU,CAAC,aAAa,CAAC;IAA1C,YAAY,GAAA,YAAA,CAAZ,YAAY;EACpB,OAAO,YAAY;AACrB","sourceRoot":"","sourcesContent":["import { useContext } from 'react';\nimport { getChainById } from '../helpers';\nimport { ConfigContext } from '../providers';\nconst validConfigs = (configs) => {\n    if (!(configs === null || configs === void 0 ? void 0 : configs.networks) || (configs === null || configs === void 0 ? void 0 : configs.networks.length) === 0) {\n        console.warn('No networks or supportedChain configured');\n    }\n    return configs;\n};\n/**\n * Returns singleton instance of {@link Config}.\n * Takes no parameters.\n * @public\n */\nexport function useConfig() {\n    var _a;\n    const { config } = useContext(ConfigContext);\n    // backward compatible with supportedChains\n    if (config.supportedChains) {\n        console.warn('supportedChain is deprecated, please pass networks instead');\n        const networks = (_a = config.supportedChains) === null || _a === void 0 ? void 0 : _a.map((chainId) => getChainById(chainId));\n        return validConfigs(Object.assign(Object.assign({}, config), { networks }));\n    }\n    return validConfigs(config);\n}\n/**\n * @public\n */\nexport function useUpdateConfig() {\n    const { updateConfig } = useContext(ConfigContext);\n    return updateConfig;\n}\n//# sourceMappingURL=useConfig.js.map"]},"metadata":{},"sourceType":"module"}