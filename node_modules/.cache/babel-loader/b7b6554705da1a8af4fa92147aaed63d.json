{"ast":null,"code":"import _classCallCheck from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Provider } from \"./Provider.js\";\nimport { ProviderType } from \"./ProviderType.js\";\nexport var ControllerProvider = /*#__PURE__*/function (_Provider) {\n  _inherits(ControllerProvider, _Provider);\n  var _super = _createSuper(ControllerProvider);\n  function ControllerProvider(provide) {\n    var _this;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, ControllerProvider);\n    _this = _super.call(this, provide, options);\n    _defineProperty(_assertThisInitialized(_this), \"tokenRouter\", void 0);\n    _this.type = ProviderType.CONTROLLER;\n    return _this;\n  }\n  /**\n   *\n   * @returns {any[]}\n   */\n  _createClass(ControllerProvider, [{\n    key: \"middlewares\",\n    get: function get() {\n      return Object.assign({\n        use: [],\n        useAfter: [],\n        useBefore: []\n      }, this.store.get(\"middlewares\", {}));\n    }\n    /**\n     *\n     * @param middlewares\n     */,\n    set: function set(middlewares) {\n      var mdlwrs = this.middlewares;\n      var concat = function concat(key, a, b) {\n        return a[key] = a[key].concat(b[key]);\n      };\n      Object.keys(middlewares).forEach(function (key) {\n        concat(key, mdlwrs, middlewares);\n      });\n      this.store.set(\"middlewares\", mdlwrs);\n    }\n  }]);\n  return ControllerProvider;\n}(Provider);","map":{"version":3,"sources":["../../../src/domain/ControllerProvider.ts"],"names":[],"mappings":";;;;;;AAEA,SAAQ,QAAQ,QAAO,eAAa;AACpC,SAAQ,YAAY,QAAO,mBAAiB;AAE5C,WAAa,kBAA4B,0BAAA,SAAA;EAAA,SAAA,CAAA,kBAAA,EAAA,SAAA;EAAA,IAAA,MAAA,GAAA,YAAA,CAAA,kBAAA;EAGvC,SAAA,mBAAY,OAAsB,EAAiC;IAAA,IAAA,KAAA;IAAA,IAA/B,OAAA,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAA6B,CAAA,CAAE;IAAA,eAAA,OAAA,kBAAA;IACjE,KAAA,GAAA,MAAA,CAAA,IAAA,OAAM,OAAO,EAAE,OAAO;IAAE,eAAA,CAAA,sBAAA,CAAA,KAAA;IACxB,KAAA,CAAK,IAAI,GAAG,YAAY,CAAC,UAAU;IAAC,OAAA,KAAA;EACtC;EAEA;;;AAGG;EAHH,YAAA,CAAA,kBAAA;IAAA,GAAA;IAAA,GAAA,EAIA,SAAA,IAAA,EAAe;MACb,OAAO,MAAM,CAAC,MAAM,CAClB;QACE,GAAG,EAAE,EAAE;QACP,QAAQ,EAAE,EAAE;QACZ,SAAS,EAAE;OACZ,EACD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,EAAE,CAAA,CAAE,CAAC,CAClC;IACH;IAEA;;;AAGG,OAHH;IAAA,GAAA,EAIA,SAAA,IAAgB,WAAkC,EAAA;MAChD,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW;MAC/B,IAAM,MAAM,GAAG,SAAT,MAAM,CAAI,GAAW,EAAE,CAAM,EAAE,CAAM;QAAA,OAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MAAA,CAAC;MAEhF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,UAAC,GAAW,EAAI;QAC/C,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,WAAW,CAAC;MAClC,CAAC,CAAC;MAEF,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC;IACvC;EAAC;EAAA,OAAA,kBAAA;AAAA,EApC8C,QAAW","sourceRoot":"","sourcesContent":["import { Provider } from \"./Provider.js\";\nimport { ProviderType } from \"./ProviderType.js\";\nexport class ControllerProvider extends Provider {\n    tokenRouter;\n    constructor(provide, options = {}) {\n        super(provide, options);\n        this.type = ProviderType.CONTROLLER;\n    }\n    /**\n     *\n     * @returns {any[]}\n     */\n    get middlewares() {\n        return Object.assign({\n            use: [],\n            useAfter: [],\n            useBefore: []\n        }, this.store.get(\"middlewares\", {}));\n    }\n    /**\n     *\n     * @param middlewares\n     */\n    set middlewares(middlewares) {\n        const mdlwrs = this.middlewares;\n        const concat = (key, a, b) => (a[key] = a[key].concat(b[key]));\n        Object.keys(middlewares).forEach((key) => {\n            concat(key, mdlwrs, middlewares);\n        });\n        this.store.set(\"middlewares\", mdlwrs);\n    }\n}\n//# sourceMappingURL=ControllerProvider.js.map"]},"metadata":{},"sourceType":"module"}