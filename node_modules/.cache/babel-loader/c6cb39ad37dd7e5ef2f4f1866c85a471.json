{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nvar useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nvar QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var _React$useState = React.useState(function () {\n      return createValue();\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    value = _React$useState2[0];\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};\nexport { QueryErrorResetBoundary, useQueryErrorResetBoundary };","map":{"version":3,"sources":["../../src/QueryErrorResetBoundary.tsx"],"names":["clearReset","isReset","reset","children"],"mappings":";;;;AAWA,SAAA,WAAA,CAAA,EAAA;;;IAGIA,UAAAA,EAAAA,SAAAA,WAAAA,EAAAA;MACEC,QAAAA,GAAAA,KAAAA;;IAEFC,KAAAA,EAAAA,SAAAA,MAAAA,EAAAA;MACED,QAAAA,GAAAA,IAAAA;;IAEFA,OAAAA,EAAAA,SAAAA,QAAAA,EAAAA;MACE,OAAA,QAAA;IACD;;AAEJ;AAED,IAAA,8BAAA,GAAA,aAAA,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,CAAA,CAAA,CAAA;;AAIO,IAAA,0BAAA,GAAA,SAAA,0BAAA,CAAA;EAAA,OAAA,KAAA,CAAA,UAAA,CAAA,8BAAA,CAAA;AAAA,EAAA,CAAA;;AAWA,IAAA,uBAAA,GAAA,SAAA,uBAAA,CAAA,IAAA,EAAiC;EAAA,IACtCE,QAAAA,GAAAA,IAAAA,CAAAA,QAAAA;;;;;;;IAI2C,KAAA,EAAA;;AAM5C,CAAA","sourcesContent":["'use client'\nimport * as React from 'react'\n\n// CONTEXT\n\nexport interface QueryErrorResetBoundaryValue {\n  clearReset: () => void\n  isReset: () => boolean\n  reset: () => void\n}\n\nfunction createValue(): QueryErrorResetBoundaryValue {\n  let isReset = false\n  return {\n    clearReset: () => {\n      isReset = false\n    },\n    reset: () => {\n      isReset = true\n    },\n    isReset: () => {\n      return isReset\n    },\n  }\n}\n\nconst QueryErrorResetBoundaryContext = React.createContext(createValue())\n\n// HOOK\n\nexport const useQueryErrorResetBoundary = () =>\n  React.useContext(QueryErrorResetBoundaryContext)\n\n// COMPONENT\n\nexport interface QueryErrorResetBoundaryProps {\n  children:\n    | ((value: QueryErrorResetBoundaryValue) => React.ReactNode)\n    | React.ReactNode\n}\n\nexport const QueryErrorResetBoundary = ({\n  children,\n}: QueryErrorResetBoundaryProps) => {\n  const [value] = React.useState(() => createValue())\n  return (\n    <QueryErrorResetBoundaryContext.Provider value={value}>\n      {typeof children === 'function'\n        ? (children as Function)(value)\n        : children}\n    </QueryErrorResetBoundaryContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}