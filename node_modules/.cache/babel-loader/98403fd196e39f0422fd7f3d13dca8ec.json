{"ast":null,"code":"import { decorateProperty as r } from \"./base.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nfunction e(e) {\n  return r({\n    descriptor: function descriptor(r) {\n      return {\n        get: function get() {\n          var r, o;\n          return null !== (o = null === (r = this.renderRoot) || void 0 === r ? void 0 : r.querySelectorAll(e)) && void 0 !== o ? o : [];\n        },\n        enumerable: !0,\n        configurable: !0\n      };\n    }\n  });\n}\nexport { e as queryAll };","map":{"version":3,"sources":["../src/decorators/query-all.ts"],"names":["queryAll","selector","decorateProperty","descriptor","_name","get","_b","renderRoot","querySelectorAll","enumerable","configurable"],"mappings":";;;;;;AAwCM,SAAUA,CAAAA,CAASC,CAAAA,EAAAA;EACvB,OAAOC,CAAAA,CAAiB;IACtBC,UAAAA,EAAaC,SAAAA,WAAAA,CAAAA;MAAAA,OAAwB;QACnCC,GAAAA,WAAAA,IAAAA,EAAAA;UAAAA,IAAAA,CAAAA,EAAAA,CAAAA;UACE,OAAsD,IAAA,MAA/CC,CAAAA,GAAe,IAAA,MAAfA,CAAAA,GAAAA,IAAAA,CAAKC,UAAAA,CAAAA,IAAAA,KAAU,CAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,CAAEC,gBAAAA,CAAiBP,CAAAA,CAAAA,CAAAA,IAAAA,KAAa,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EACvD;QAAA,CAAA;QACDQ,UAAAA,EAAAA,CAAY,CAAA;QACZC,YAAAA,EAAAA,CAAc;MAAA,CAAA;IAAA;EAAA,CAAA,CAGpB;AAAA;AAAA,SAAA,CAAA,IAAA,QAAA","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs: NodeListOf<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector: string) {\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      get(this: ReactiveElement) {\n        return this.renderRoot?.querySelectorAll(selector) ?? [];\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n"]},"metadata":{},"sourceType":"module"}