{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar e = Symbol(),\n  t = Symbol(),\n  r = \"a\",\n  n = \"w\";\nvar o = function o(e, t) {\n  return new Proxy(e, t);\n};\nvar s = Object.getPrototypeOf,\n  c = new WeakMap(),\n  l = function l(e) {\n    return e && (c.has(e) ? c.get(e) : s(e) === Object.prototype || s(e) === Array.prototype);\n  },\n  f = function f(e) {\n    return \"object\" == typeof e && null !== e;\n  },\n  i = function i(e) {\n    if (Array.isArray(e)) return Array.from(e);\n    var t = Object.getOwnPropertyDescriptors(e);\n    return Object.values(t).forEach(function (e) {\n      e.configurable = !0;\n    }), Object.create(s(e), t);\n  },\n  u = function u(e) {\n    return e[t] || e;\n  },\n  a = function a(s, c, f, p) {\n    if (!l(s)) return s;\n    var g = p && p.get(s);\n    if (!g) {\n      var _e = u(s);\n      g = function (e) {\n        return Object.values(Object.getOwnPropertyDescriptors(e)).some(function (e) {\n          return !e.configurable && !e.writable;\n        });\n      }(_e) ? [_e, i(_e)] : [_e], null == p || p.set(s, g);\n    }\n    var _g = g,\n      _g2 = _slicedToArray(_g, 2),\n      y = _g2[0],\n      h = _g2[1];\n    var w = f && f.get(y);\n    return w && w[1].f === !!h || (w = function (o, s) {\n      var c = {\n        f: s\n      };\n      var l = !1;\n      var f = function f(e, t) {\n          if (!l) {\n            var _s = c[r].get(o);\n            if (_s || (_s = {}, c[r].set(o, _s)), e === n) _s[n] = !0;else {\n              var _r = _s[e];\n              _r || (_r = new Set(), _s[e] = _r), _r.add(t);\n            }\n          }\n        },\n        i = {\n          get: function get(e, n) {\n            return n === t ? o : (f(\"k\", n), a(Reflect.get(e, n), c[r], c.c));\n          },\n          has: function has(t, n) {\n            return n === e ? (l = !0, c[r].delete(o), !0) : (f(\"h\", n), Reflect.has(t, n));\n          },\n          getOwnPropertyDescriptor: function getOwnPropertyDescriptor(e, t) {\n            return f(\"o\", t), Reflect.getOwnPropertyDescriptor(e, t);\n          },\n          ownKeys: function ownKeys(e) {\n            return f(n), Reflect.ownKeys(e);\n          }\n        };\n      return s && (i.set = i.deleteProperty = function () {\n        return !1;\n      }), [i, c];\n    }(y, !!h), w[1].p = o(h || y, w[0]), f && f.set(y, w)), w[1][r] = c, w[1].c = f, w[1].p;\n  },\n  p = function p(e, t, r, o) {\n    if (Object.is(e, t)) return !1;\n    if (!f(e) || !f(t)) return !0;\n    var s = r.get(u(e));\n    if (!s) return !0;\n    if (o) {\n      var _r2 = o.get(e);\n      if (_r2 && _r2.n === t) return _r2.g;\n      o.set(e, {\n        n: t,\n        g: !1\n      });\n    }\n    var c = null;\n    try {\n      var _iterator = _createForOfIteratorHelper(s.h || []),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _r4 = _step.value;\n          if (c = Reflect.has(e, _r4) !== Reflect.has(t, _r4), c) return c;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      if (!0 === s[n]) {\n        if (c = function (e, t) {\n          var r = Reflect.ownKeys(e),\n            n = Reflect.ownKeys(t);\n          return r.length !== n.length || r.some(function (e, t) {\n            return e !== n[t];\n          });\n        }(e, t), c) return c;\n      } else {\n        var _iterator2 = _createForOfIteratorHelper(s.o || []),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _r3 = _step2.value;\n            if (c = !!Reflect.getOwnPropertyDescriptor(e, _r3) != !!Reflect.getOwnPropertyDescriptor(t, _r3), c) return c;\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n      var _iterator3 = _createForOfIteratorHelper(s.k || []),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _n = _step3.value;\n          if (c = p(e[_n], t[_n], r, o), c) return c;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return null === c && (c = !0), c;\n    } finally {\n      o && o.set(e, {\n        n: t,\n        g: c\n      });\n    }\n  },\n  g = function g(t) {\n    return !!l(t) && e in t;\n  },\n  y = function y(e) {\n    return l(e) && e[t] || null;\n  },\n  h = function h(e) {\n    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;\n    c.set(e, t);\n  },\n  w = function w(e, t, r) {\n    var o = [],\n      s = new WeakSet(),\n      c = function c(e, l) {\n        if (s.has(e)) return;\n        f(e) && s.add(e);\n        var i = f(e) && t.get(u(e));\n        if (i) {\n          var a, p;\n          if (null == (a = i.h) || a.forEach(function (e) {\n            var t = \":has(\".concat(String(e), \")\");\n            o.push(l ? [].concat(_toConsumableArray(l), [t]) : [t]);\n          }), !0 === i[n]) {\n            var _e2 = \":ownKeys\";\n            o.push(l ? [].concat(_toConsumableArray(l), [_e2]) : [_e2]);\n          } else {\n            var g;\n            null == (g = i.o) || g.forEach(function (e) {\n              var t = \":hasOwn(\".concat(String(e), \")\");\n              o.push(l ? [].concat(_toConsumableArray(l), [t]) : [t]);\n            });\n          }\n          null == (p = i.k) || p.forEach(function (t) {\n            r && !(\"value\" in (Object.getOwnPropertyDescriptor(e, t) || {})) || c(e[t], l ? [].concat(_toConsumableArray(l), [t]) : [t]);\n          });\n        } else l && o.push(l);\n      };\n    return c(e), o;\n  },\n  O = function O(e) {\n    o = e;\n  };\nexport { w as affectedToPathList, a as createProxy, y as getUntracked, p as isChanged, h as markToTrack, O as replaceNewProxy, g as trackMemo };","map":{"version":3,"sources":["../src/index.ts"],"names":["Symbol","ALL_OWN_KEYS_PROPERTY","newProxy","target","handler","Proxy","Object","getPrototypeOf","objectsToTrack","WeakMap","isObjectToTrack","obj","has","get","getProto","prototype","Array","isObject","x","values","getOwnPropertyDescriptors","some","descriptor","configurable","writable","isArray","from","descriptors","forEach","desc","create","origObj","isTargetCopied","state","f","trackObject","recordUsage","type","key","used","AFFECTED_PROPERTY","set","Set","add","delete","GET_ORIGINAL_SYMBOL","createProxy","Reflect","TRACK_MEMO_SYMBOL","getOwnPropertyDescriptor","ownKeys","deleteProperty","getOriginalObject","affected","proxyCache","targetCache","targetAndCopied","copyTargetObject","copiedTarget","handlerAndState","prevObj","nextObj","prevKeys","nextKeys","length","k","i","cache","is","hit","n","g","changed","isChanged","trackMemo","getUntracked","markToTrack","mark","affectedToPathList","onlyWithValues","list","seen","WeakSet","walk","path","segment","push","replaceNewProxy","fn"],"mappings":"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","sourcesContent":["// symbols\nconst TRACK_MEMO_SYMBOL = Symbol();\nconst GET_ORIGINAL_SYMBOL = Symbol();\n\n// properties\nconst AFFECTED_PROPERTY = 'a';\nconst IS_TARGET_COPIED_PROPERTY = 'f';\nconst PROXY_PROPERTY = 'p';\nconst PROXY_CACHE_PROPERTY = 'c';\nconst NEXT_OBJECT_PROPERTY = 'n';\nconst CHANGED_PROPERTY = 'g';\nconst HAS_KEY_PROPERTY = 'h';\nconst ALL_OWN_KEYS_PROPERTY = 'w';\nconst HAS_OWN_KEY_PROPERTY = 'o';\nconst KEYS_PROPERTY = 'k';\n\n// function to create a new bare proxy\nlet newProxy = <T extends object>(\n  target: T,\n  handler: ProxyHandler<T>,\n) => new Proxy(target, handler);\n\n// get object prototype\nconst getProto = Object.getPrototypeOf;\n\nconst objectsToTrack = new WeakMap<object, boolean>();\n\n// check if obj is a plain object or an array\nconst isObjectToTrack = <T>(obj: T): obj is T extends object ? T : never => (\n  obj && (objectsToTrack.has(obj as unknown as object)\n    ? objectsToTrack.get(obj as unknown as object) as boolean\n    : (getProto(obj) === Object.prototype || getProto(obj) === Array.prototype)\n  )\n);\n\n// check if it is object\nconst isObject = (x: unknown): x is object => (\n  typeof x === 'object' && x !== null\n);\n\n// Properties that are both non-configurable and non-writable will break\n// the proxy get trap when we try to return a recursive/child compare proxy\n// from them. We can avoid this by making a copy of the target object with\n// all descriptors marked as configurable, see `copyTargetObject`.\n// See: https://github.com/dai-shi/proxy-compare/pull/8\nconst needsToCopyTargetObject = (obj: object) => (\n  Object.values(Object.getOwnPropertyDescriptors(obj)).some(\n    (descriptor) => !descriptor.configurable && !descriptor.writable,\n  )\n);\n\n// Make a copy with all descriptors marked as configurable.\nconst copyTargetObject = <T extends object>(obj: T): T => {\n  if (Array.isArray(obj)) {\n    // Arrays need a special way to copy\n    return Array.from(obj) as T;\n  }\n  // For non-array objects, we create a new object keeping the prototype\n  // with changing all configurable options (otherwise, proxies will complain)\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  Object.values(descriptors).forEach((desc) => { desc.configurable = true; });\n  return Object.create(getProto(obj), descriptors);\n};\n\ntype HasKeySet = Set<string | symbol>\ntype HasOwnKeySet = Set<string | symbol>\ntype KeysSet = Set<string | symbol>\ntype Used = {\n  [HAS_KEY_PROPERTY]?: HasKeySet;\n  [ALL_OWN_KEYS_PROPERTY]?: true;\n  [HAS_OWN_KEY_PROPERTY]?: HasOwnKeySet;\n  [KEYS_PROPERTY]?: KeysSet;\n};\ntype Affected = WeakMap<object, Used>;\ntype ProxyHandlerState<T extends object> = {\n  readonly [IS_TARGET_COPIED_PROPERTY]: boolean;\n  [PROXY_PROPERTY]?: T;\n  [PROXY_CACHE_PROPERTY]?: ProxyCache<object> | undefined;\n  [AFFECTED_PROPERTY]?: Affected;\n}\ntype ProxyCache<T extends object> = WeakMap<\n  object,\n  readonly [ProxyHandler<T>, ProxyHandlerState<T>]\n>;\ntype TargetCache<T extends object> = WeakMap<\n  object,\n  readonly [target: T, copiedTarget?: T]\n>;\n\nconst createProxyHandler = <T extends object>(origObj: T, isTargetCopied: boolean) => {\n  const state: ProxyHandlerState<T> = {\n    [IS_TARGET_COPIED_PROPERTY]: isTargetCopied,\n  };\n  let trackObject = false; // for trackMemo\n  const recordUsage = (\n    type:\n      | typeof HAS_KEY_PROPERTY\n      | typeof ALL_OWN_KEYS_PROPERTY\n      | typeof HAS_OWN_KEY_PROPERTY\n      | typeof KEYS_PROPERTY,\n    key?: string | symbol,\n  ) => {\n    if (!trackObject) {\n      let used = (state[AFFECTED_PROPERTY] as Affected).get(origObj);\n      if (!used) {\n        used = {};\n        (state[AFFECTED_PROPERTY] as Affected).set(origObj, used);\n      }\n      if (type === ALL_OWN_KEYS_PROPERTY) {\n        used[ALL_OWN_KEYS_PROPERTY] = true;\n      } else {\n        let set = used[type];\n        if (!set) {\n          set = new Set();\n          used[type] = set;\n        }\n        set.add(key as string | symbol);\n      }\n    }\n  };\n  const recordObjectAsUsed = () => {\n    trackObject = true;\n    (state[AFFECTED_PROPERTY] as Affected).delete(origObj);\n  };\n  const handler: ProxyHandler<T> = {\n    get(target, key) {\n      if (key === GET_ORIGINAL_SYMBOL) {\n        return origObj;\n      }\n      recordUsage(KEYS_PROPERTY, key);\n      return createProxy(\n        Reflect.get(target, key),\n        (state[AFFECTED_PROPERTY] as Affected),\n        state[PROXY_CACHE_PROPERTY],\n      );\n    },\n    has(target, key) {\n      if (key === TRACK_MEMO_SYMBOL) {\n        recordObjectAsUsed();\n        return true;\n      }\n      recordUsage(HAS_KEY_PROPERTY, key);\n      return Reflect.has(target, key);\n    },\n    getOwnPropertyDescriptor(target, key) {\n      recordUsage(HAS_OWN_KEY_PROPERTY, key);\n      return Reflect.getOwnPropertyDescriptor(target, key);\n    },\n    ownKeys(target) {\n      recordUsage(ALL_OWN_KEYS_PROPERTY);\n      return Reflect.ownKeys(target);\n    },\n  };\n  if (isTargetCopied) {\n    handler.set = handler.deleteProperty = () => false;\n  }\n  return [handler, state] as const;\n};\n\nconst getOriginalObject = <T extends object>(obj: T) => (\n  // unwrap proxy\n  (obj as { [GET_ORIGINAL_SYMBOL]?: typeof obj })[GET_ORIGINAL_SYMBOL]\n  // otherwise\n  || obj\n);\n\n/**\n * Create a proxy.\n *\n * This function will create a proxy at top level and proxy nested objects as you access them,\n * in order to keep track of which properties were accessed via get/has proxy handlers:\n *\n * NOTE: Printing of WeakMap is hard to inspect and not very readable\n * for this purpose you can use the `affectedToPathList` helper.\n *\n * @param {object} obj - Object that will be wrapped on the proxy.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that will hold the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [proxyCache] -\n * WeakMap that will help keep referential identity for proxies.\n * @returns {Proxy<object>} - Object wrapped in a proxy.\n *\n * @example\n * import { createProxy } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n * const proxy = createProxy(original, affected);\n *\n * proxy.a // Will mark as used and track its value.\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"a\"\n *\n * proxy.d // Will mark \"d\" as accessed to track and proxy itself ({ e: \"3\" }).\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"d\"\n */\nexport const createProxy = <T>(\n  obj: T,\n  affected: WeakMap<object, unknown>,\n  proxyCache?: WeakMap<object, unknown>,\n  targetCache?: WeakMap<object, unknown>,\n): T => {\n  if (!isObjectToTrack(obj)) return obj;\n  let targetAndCopied = (\n    targetCache && (targetCache as TargetCache<typeof obj>).get(obj)\n  );\n  if (!targetAndCopied) {\n    const target = getOriginalObject(obj);\n    if (needsToCopyTargetObject(target)) {\n      targetAndCopied = [target, copyTargetObject(target)];\n    } else {\n      targetAndCopied = [target];\n    }\n    targetCache?.set(obj, targetAndCopied);\n  }\n  const [target, copiedTarget] = targetAndCopied;\n  let handlerAndState = (\n    proxyCache && (proxyCache as ProxyCache<typeof target>).get(target)\n  );\n  if (\n    !handlerAndState\n    || handlerAndState[1][IS_TARGET_COPIED_PROPERTY] !== !!copiedTarget\n  ) {\n    handlerAndState = createProxyHandler<typeof target>(target, !!copiedTarget);\n    handlerAndState[1][PROXY_PROPERTY] = newProxy(\n      copiedTarget || target,\n      handlerAndState[0],\n    );\n    if (proxyCache) {\n      proxyCache.set(target, handlerAndState);\n    }\n  }\n  handlerAndState[1][AFFECTED_PROPERTY] = affected as Affected;\n  handlerAndState[1][PROXY_CACHE_PROPERTY] = proxyCache as ProxyCache<object> | undefined;\n  return handlerAndState[1][PROXY_PROPERTY] as typeof target;\n};\n\nconst isAllOwnKeysChanged = (prevObj: object, nextObj: object) => {\n  const prevKeys = Reflect.ownKeys(prevObj);\n  const nextKeys = Reflect.ownKeys(nextObj);\n  return prevKeys.length !== nextKeys.length\n    || prevKeys.some((k, i) => k !== nextKeys[i]);\n};\n\ntype ChangedCache = WeakMap<object, {\n  [NEXT_OBJECT_PROPERTY]: object;\n  [CHANGED_PROPERTY]: boolean;\n}>;\n\n/**\n * Compare changes on objects.\n *\n * This will compare the affected properties on tracked objects inside the proxy\n * to check if there were any changes made to it,\n * by default if no property was accessed on the proxy it will attempt to do a\n * reference equality check for the objects provided (Object.is(a, b)). If you access a property\n * on the proxy, then isChanged will only compare the affected properties.\n *\n * @param {object} prevObj - The previous object to compare.\n * @param {object} nextObj - Object to compare with the previous one.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that holds the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [cache] -\n * WeakMap that holds a cache of the comparisons for better performance with repetitive comparisons,\n * and to avoid infinite loop with circular structures.\n * @returns {boolean} - Boolean indicating if the affected property on the object has changed.\n *\n * @example\n * import { createProxy, isChanged } from 'proxy-compare';\n *\n * const obj = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(obj, affected);\n *\n * proxy.a\n *\n * isChanged(obj, { a: \"1\" }, affected) // false\n *\n * proxy.a = \"2\"\n *\n * isChanged(obj, { a: \"1\" }, affected) // true\n */\n\nexport const isChanged = (\n  prevObj: unknown,\n  nextObj: unknown,\n  affected: WeakMap<object, unknown>,\n  cache?: WeakMap<object, unknown>,\n): boolean => {\n  if (Object.is(prevObj, nextObj)) {\n    return false;\n  }\n  if (!isObject(prevObj) || !isObject(nextObj)) return true;\n  const used = (affected as Affected).get(getOriginalObject(prevObj));\n  if (!used) return true;\n  if (cache) {\n    const hit = (cache as ChangedCache).get(prevObj);\n    if (hit && hit[NEXT_OBJECT_PROPERTY] === nextObj) {\n      return hit[CHANGED_PROPERTY];\n    }\n    // for object with cycles\n    (cache as ChangedCache).set(prevObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: false,\n    });\n  }\n  let changed: boolean | null = null;\n  try {\n    for (const key of used[HAS_KEY_PROPERTY] || []) {\n      changed = Reflect.has(prevObj, key) !== Reflect.has(nextObj, key);\n      if (changed) return changed;\n    }\n    if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n      changed = isAllOwnKeysChanged(prevObj, nextObj);\n      if (changed) return changed;\n    } else {\n      for (const key of used[HAS_OWN_KEY_PROPERTY] || []) {\n        const hasPrev = !!Reflect.getOwnPropertyDescriptor(prevObj, key);\n        const hasNext = !!Reflect.getOwnPropertyDescriptor(nextObj, key);\n        changed = hasPrev !== hasNext;\n        if (changed) return changed;\n      }\n    }\n    for (const key of used[KEYS_PROPERTY] || []) {\n      changed = isChanged(\n        (prevObj as any)[key],\n        (nextObj as any)[key],\n        affected,\n        cache,\n      );\n      if (changed) return changed;\n    }\n    if (changed === null) changed = true;\n    return changed;\n  } finally {\n    if (cache) {\n      cache.set(prevObj, {\n        [NEXT_OBJECT_PROPERTY]: nextObj,\n        [CHANGED_PROPERTY]: changed,\n      });\n    }\n  }\n};\n\n// explicitly track object with memo\nexport const trackMemo = (obj: unknown) => {\n  if (isObjectToTrack(obj)) {\n    return TRACK_MEMO_SYMBOL in obj;\n  }\n  return false;\n};\n\n/**\n * Unwrap proxy to get the original object.\n *\n * Used to retrieve the original object used to create the proxy instance with `createProxy`.\n *\n * @param {Proxy<object>} obj -  The proxy wrapper of the originial object.\n * @returns {object | null} - Return either the unwrapped object if exists.\n *\n * @example\n * import { createProxy, getUntracked } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n * const originalFromProxy = getUntracked(proxy)\n *\n * Object.is(original, originalFromProxy) // true\n * isChanged(original, originalFromProxy, affected) // false\n */\nexport const getUntracked = <T>(obj: T): T | null => {\n  if (isObjectToTrack(obj)) {\n    return (obj as { [GET_ORIGINAL_SYMBOL]?: T })[GET_ORIGINAL_SYMBOL] || null;\n  }\n  return null;\n};\n\n/**\n * Mark object to be tracked.\n *\n * This function marks an object that will be passed into `createProxy`\n * as marked to track or not. By default only Array and Object are marked to track,\n * so this is useful for example to mark a class instance to track or to mark a object\n * to be untracked when creating your proxy.\n *\n * @param obj - Object to mark as tracked or not.\n * @param mark - Boolean indicating whether you want to track this object or not.\n * @returns - No return.\n *\n * @example\n * import { createProxy, markToTrack, isChanged } from 'proxy-compare';\n *\n * const nested = { e: \"3\" }\n *\n * markToTrack(nested, false)\n *\n * const original = { a: \"1\", c: \"2\", d: nested };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n *\n * proxy.d.e\n *\n * isChanged(original, { d: { e: \"3\" } }, affected) // true\n */\nexport const markToTrack = (obj: object, mark = true) => {\n  objectsToTrack.set(obj, mark);\n};\n\n/**\n * Convert `affected` to path list\n *\n * `affected` is a weak map which is not printable.\n * This function is can convert it to printable path list.\n * It's for debugging purpose.\n *\n * @param obj - An object that is used with `createProxy`.\n * @param affected - A weak map that is used with `createProxy`.\n * @param onlyWithValues - An optional boolean to exclude object getters.\n * @returns - An array of paths.\n */\nexport const affectedToPathList = (\n  obj: unknown,\n  affected: WeakMap<object, unknown>,\n  onlyWithValues?: boolean,\n) => {\n  const list: (string | symbol)[][] = [];\n  const seen = new WeakSet();\n  const walk = (x: unknown, path?: (string | symbol)[]) => {\n    if (seen.has(x as object)) {\n      // for object with cycles\n      return;\n    }\n    if (isObject(x)) {\n      seen.add(x);\n    }\n    const used = isObject(x) && (affected as Affected).get(getOriginalObject(x));\n    if (used) {\n      used[HAS_KEY_PROPERTY]?.forEach((key) => {\n        const segment = `:has(${String(key)})`;\n        list.push(path ? [...path, segment] : [segment]);\n      });\n      if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n        const segment = ':ownKeys';\n        list.push(path ? [...path, segment] : [segment]);\n      } else {\n        used[HAS_OWN_KEY_PROPERTY]?.forEach((key) => {\n          const segment = `:hasOwn(${String(key)})`;\n          list.push(path ? [...path, segment] : [segment]);\n        });\n      }\n      used[KEYS_PROPERTY]?.forEach((key) => {\n        if (!onlyWithValues || 'value' in (Object.getOwnPropertyDescriptor(x, key) || {})) {\n          walk((x as any)[key], path ? [...path, key] : [key]);\n        }\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(obj);\n  return list;\n};\n\n/**\n * replace newProxy function.\n *\n * This can be used if you want to use proxy-polyfill.\n * Note that proxy-polyfill can't polyfill everything.\n * Use it at your own risk.\n */\nexport const replaceNewProxy = (fn: typeof newProxy) => {\n  newProxy = fn;\n};\n"]},"metadata":{},"sourceType":"module"}