{"ast":null,"code":"import { decoratorTypeOf, DecoratorTypes, StoreSet } from \"@tsed/core\";\nimport { Inject } from \"../decorators/inject.js\";\n/**\n * Get or set Configuration on a class.\n *\n * @decorator\n */\nexport function Configuration() {\n  var configuration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    switch (decoratorTypeOf(args)) {\n      case DecoratorTypes.CLASS:\n        StoreSet(\"configuration\", configuration)(args[0]);\n        break;\n      default:\n      case DecoratorTypes.PARAM_CTOR:\n        return Inject(Configuration)(args[0], args[1], args[2]);\n    }\n  };\n}","map":{"version":3,"sources":["../../../src/decorators/configuration.ts"],"names":[],"mappings":"AAAA,SAA6B,eAAe,EAAE,cAAc,EAAE,QAAQ,QAAO,YAAY;AACzF,SAAQ,MAAM,QAAO,yBAAuB;AAG5C;;;;AAIG;AACH,OAAM,SAAU,aAAa,CAAA,EAAgD;EAAA,IAA/C,aAAA,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAA6C,CAAA,CAAE;EAC3E,OAAO,YAAiC;IAAA,SAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAA7B,IAAyB,OAAA,KAAA,CAAA,IAAA,GAAA,IAAA,MAAA,IAAA,GAAA,IAAA,EAAA,IAAA;MAAzB,IAAyB,CAAA,IAAA,IAAA,SAAA,CAAA,IAAA;IAAA;IAClC,QAAQ,eAAe,CAAC,IAAI,CAAC;MAC3B,KAAK,cAAc,CAAC,KAAK;QACvB,QAAQ,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEjD;MACF;MACA,KAAK,cAAc,CAAC,UAAU;QAC5B,OAAO,MAAM,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAW,CAAC;IAAC;EAExE,CAAC;AACH","sourceRoot":"","sourcesContent":["import { decoratorTypeOf, DecoratorTypes, StoreSet } from \"@tsed/core\";\nimport { Inject } from \"../decorators/inject.js\";\n/**\n * Get or set Configuration on a class.\n *\n * @decorator\n */\nexport function Configuration(configuration = {}) {\n    return (...args) => {\n        switch (decoratorTypeOf(args)) {\n            case DecoratorTypes.CLASS:\n                StoreSet(\"configuration\", configuration)(args[0]);\n                break;\n            default:\n            case DecoratorTypes.PARAM_CTOR:\n                return Inject(Configuration)(args[0], args[1], args[2]);\n        }\n    };\n}\n//# sourceMappingURL=configuration.js.map"]},"metadata":{},"sourceType":"module"}