{"ast":null,"code":"import _slicedToArray from \"C:/Users/Kompa/Desktop/games/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { useDebounce } from '../../../hooks';\nimport { useReadonlyNetworks } from '../../network';\nimport { BlockNumbersContext } from './context';\nimport { blockNumberReducer } from '../common/reducer';\nimport { subscribeToNewBlock } from '../common/subscribeToNewBlock';\nimport { useWindow } from '../../window';\nimport { useIsMounted } from '../../../hooks/useIsMounted';\nexport function BlockNumbersProvider(_ref) {\n  var children = _ref.children;\n  var networks = useReadonlyNetworks();\n  var _useReducer = useReducer(blockNumberReducer, {}),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    state = _useReducer2[0],\n    dispatch = _useReducer2[1];\n  var isActive = useWindow();\n  var isMounted = useIsMounted();\n  useEffect(function () {\n    var onUnmount = Object.entries(networks).map(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        chainId = _ref3[0],\n        provider = _ref3[1];\n      return subscribeToNewBlock(provider, Number(chainId), function () {\n        if (isMounted()) {\n          dispatch.apply(void 0, arguments);\n        }\n      }, isActive);\n    });\n    return function () {\n      return onUnmount.forEach(function (fn) {\n        return fn();\n      });\n    };\n  }, [networks]);\n  var debouncedState = useDebounce(state, 100);\n  return _jsx(BlockNumbersContext.Provider, {\n    value: debouncedState,\n    children: children\n  });\n}","map":{"version":3,"sources":["../../../../../../src/providers/blockNumber/blockNumbers/provider.tsx"],"names":[],"mappings":";;AAAA,SAAoB,SAAS,EAAE,UAAU,QAAQ,OAAO;AACxD,SAAS,WAAW,QAAQ,gBAAgB;AAC5C,SAAS,mBAAmB,QAAQ,eAAe;AACnD,SAAS,mBAAmB,QAAQ,WAAW;AAC/C,SAAS,kBAAkB,QAAQ,mBAAmB;AACtD,SAAS,mBAAmB,QAAQ,+BAA+B;AACnE,SAAS,SAAS,QAAQ,cAAc;AACxC,SAAS,YAAY,QAAQ,6BAA6B;AAM1D,OAAM,SAAU,oBAAoB,CAAA,IAAA,EAAoB;EAAA,IAAjB,QAAQ,GAAA,IAAA,CAAR,QAAQ;EAC7C,IAAM,QAAQ,GAAG,mBAAmB,EAAE;EACtC,IAAA,WAAA,GAA0B,UAAU,CAAC,kBAAkB,EAAE,CAAA,CAAE,CAAC;IAAA,YAAA,GAAA,cAAA,CAAA,WAAA;IAArD,KAAK,GAAA,YAAA;IAAE,QAAQ,GAAA,YAAA;EACtB,IAAM,QAAQ,GAAG,SAAS,EAAE;EAC5B,IAAM,SAAS,GAAG,YAAY,EAAE;EAEhC,SAAS,CAAC,YAAK;IACb,IAAM,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAA,KAAA;MAAA,IAAA,KAAA,GAAA,cAAA,CAAA,KAAA;QAAE,OAAO,GAAA,KAAA;QAAE,QAAQ,GAAA,KAAA;MAAA,OAChE,mBAAmB,CACjB,QAAQ,EACR,MAAM,CAAC,OAAO,CAAC,EACf,YAAyC;QACvC,IAAI,SAAS,EAAE,EAAE;UACf,QAAQ,CAAA,KAAA,SAAA,SAAA,CAAS;QAClB;MACH,CAAC,EACD,QAAQ,CACT;IAAA,EACF;IAED,OAAO;MAAA,OAAM,SAAS,CAAC,OAAO,CAAC,UAAC,EAAE;QAAA,OAAK,EAAE,EAAE;MAAA,EAAC;IAAA;EAC9C,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;EAEd,IAAM,cAAc,GAAG,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC;EAE9C,OAAO,IAAA,CAAC,mBAAmB,CAAC,QAAQ,EAAA;IAAC,KAAK,EAAE,cAAc;IAAE,QAAQ,EAAE;EAAQ,CAAA,CAAI;AACpF","sourceRoot":"","sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { useDebounce } from '../../../hooks';\nimport { useReadonlyNetworks } from '../../network';\nimport { BlockNumbersContext } from './context';\nimport { blockNumberReducer } from '../common/reducer';\nimport { subscribeToNewBlock } from '../common/subscribeToNewBlock';\nimport { useWindow } from '../../window';\nimport { useIsMounted } from '../../../hooks/useIsMounted';\nexport function BlockNumbersProvider({ children }) {\n    const networks = useReadonlyNetworks();\n    const [state, dispatch] = useReducer(blockNumberReducer, {});\n    const isActive = useWindow();\n    const isMounted = useIsMounted();\n    useEffect(() => {\n        const onUnmount = Object.entries(networks).map(([chainId, provider]) => subscribeToNewBlock(provider, Number(chainId), (...args) => {\n            if (isMounted()) {\n                dispatch(...args);\n            }\n        }, isActive));\n        return () => onUnmount.forEach((fn) => fn());\n    }, [networks]);\n    const debouncedState = useDebounce(state, 100);\n    return _jsx(BlockNumbersContext.Provider, { value: debouncedState, children: children });\n}\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"module"}